{"version":3,"sources":["components/IconButton/index.js","components/Input/index.js","components/InfoBar/index.js","components/Message/index.js","components/Messages/index.js","util/FileConverter.js","components/Chat/index.js","util/FileProcessor.js","components/Box/index.js","components/Join/index.js","util/auth.js","components/Login/index.js","components/Signup/index.js","components/Home/index.js","components/Head/index.js","components/PrivateRoute/index.js","components/AuthButton/index.js","App.js","index.js"],"names":["IconButton","onHandleClick","className","name","disabled","icon","iconName","htmlFor","type","id","accept","onChange","e","files","Array","from","target","formData","FormData","append","get","Input","message","setMessage","sendMessage","sendFile","uploadFile","console","log","placeholder","value","event","onKeyPress","key","size","onClick","color","React","memo","room","counts","to","Message","user","content","upload","address","percent","date","avatarSrc","isSentByCurrentUser","trimmedName","trim","toLowerCase","role","title","src","roundedCircle","ProgressBar","now","animated","renderProgress","moment","format","dangerouslySetInnerHTML","__html","width","controls","renderFile","ReactEmoji","emojify","messages","rest","map","dataURLtoFile","base64","config","callback","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","socket","FileProcessor","file","this","stream","ss","createStream","createBlobReadStream","pipe","emit","quality","convertToDataUrl","then","readerDataUrl","Promise","resolve","alert","data","reader","FileReader","readAsDataURL","onload","result","onloadend","Chat","search","useLocation","useState","setName","setRoom","setMessages","setCounts","ENDPOINT","useEffect","qs","parse","io","path","transports","secure","error","off","getMessage","element","on","amount","messageIndex","findIndex","addMessage","index","payload","updateMessage","users","preventDefault","process","minifiedFileProcessor","send","originalFileProcessor","Box","control","hasNotification","notificationContent","portalDom","node","document","getElementById","Toast","delay","autohide","Header","Body","defaultProps","setHasNotification","Join","avatar","setAvatar","Form","URL","createObjectURL","Group","controlId","Label","Control","Button","block","API_URL","username","password","axios","post","response","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","getItem","Login","props","redirectToReferrer","setRedirectToReferrer","setUsername","setPassword","hasError","setHasError","AuthService","login","catch","variant","Signup","setEmail","hasSignup","setHasSignup","roles","Home","getCurrentUser","Head","children","PrivateRoute","Component","component","render","pathname","state","location","AuthButton","withRouter","history","logout","push","App","exact","ReactDom","querySelector"],"mappings":"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","file":"static/js/main.308b21c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.scss';\r\n\r\n//USER送發訊息的人，name該聊天室使用者名字\r\nconst IconButton = ({ onHandleClick, className, name, disabled, icon }) => {\r\n  const onChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    let formData = new FormData();\r\n    formData.append(0, files[0]);\r\n    onHandleClick(formData.get(0));\r\n  };\r\n  const iconName = `icon-${name}`;\r\n  return (\r\n    <span className={`chat__icon ${className} ${disabled ? 'disabled' : ''}`}>\r\n      <label className=\"chat__label\" htmlFor={iconName}>\r\n        {icon && icon}\r\n      </label>\r\n      <input\r\n        className=\"hidden-input\"\r\n        type=\"file\"\r\n        name={iconName}\r\n        id={iconName}\r\n        accept=\"image/*,video/*,audio/*\"\r\n        onChange={onChange}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import React from 'react';\r\n// import { Row, Col, Button } from 'react-bootstrap';\r\nimport { ChatTextFill, CloudUploadFill, Image } from 'react-bootstrap-icons';\r\nimport IconButton from '../IconButton';\r\nimport './index.scss';\r\n\r\nconst Input = ({\r\n  message = '',\r\n  setMessage,\r\n  sendMessage,\r\n  sendFile,\r\n  uploadFile,\r\n}) => {\r\n  const handleSendMessage = (event) => {\r\n    sendMessage(event);\r\n  };\r\n  console.log('信息', message);\r\n  return (\r\n    <form className=\"chat__form\">\r\n      <textarea\r\n        className=\"chat__message\"\r\n        placeholder=\"write some message...\"\r\n        value={message}\r\n        onChange={(event) => setMessage(event.target.value)}\r\n        onKeyPress={(event) =>\r\n          event.key === 'Enter' ? setMessage(event.target.value) : null\r\n        }\r\n      />\r\n      <div className=\"chat__controls\">\r\n        <IconButton\r\n          disabled={message}\r\n          className=\"chat__flex\"\r\n          type=\"file\"\r\n          onHandleClick={sendFile}\r\n          icon={<Image />}\r\n          name=\"files\"\r\n        />\r\n        <IconButton\r\n          disabled={message}\r\n          className=\"chat__flex\"\r\n          type=\"file\"\r\n          onHandleClick={uploadFile}\r\n          icon={<CloudUploadFill />}\r\n          name=\"upload\"\r\n        />\r\n        <ChatTextFill\r\n          className=\"chat__flex\"\r\n          size=\"32\"\r\n          onClick={message ? handleSendMessage : null}\r\n          color={message ? 'darkslategray' : '#e3e3e3'}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Input;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { Row, Col } from 'react-bootstrap';\r\nimport { ArrowLeftCircle, PeopleFill } from 'react-bootstrap-icons';\r\nimport './index.scss';\r\n\r\nconst InfoBar = ({ room, counts }) => (\r\n  <div className=\"chat__infoBar\">\r\n    <div className=\"chat__room\">\r\n      <h3>{room}</h3>\r\n    </div>\r\n    <div className=\"chat__count\">\r\n      {counts} <PeopleFill color=\"#ffffff\" size={24} />\r\n    </div>\r\n    <div className=\"chat__back\">\r\n      <Link to=\"/\">\r\n        <ArrowLeftCircle color=\"white\" size={24} />\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default React.memo(InfoBar);\r\n","import React from 'react';\r\nimport { Image, ProgressBar } from 'react-bootstrap';\r\nimport { PersonCircle } from 'react-bootstrap-icons';\r\nimport ReactEmoji from 'react-emoji';\r\nimport moment from 'moment';\r\nimport './index.scss';\r\n\r\n//USER送發訊息的人，name該聊天室使用者名字\r\nconst Message = ({\r\n  message,\r\n  message: { user, content, upload, type, address, percent, date },\r\n  name,\r\n  avatarSrc,\r\n}) => {\r\n  // console.log('最後', user, content, message);\r\n  let isSentByCurrentUser = false;\r\n  const trimmedName = name.trim().toLowerCase();\r\n  if (trimmedName === user) isSentByCurrentUser = true;\r\n  const role = isSentByCurrentUser ? 'user' : 'friend';\r\n  const title = role === 'user' ? trimmedName : user;\r\n  const renderProgress = (percent) => {\r\n    if (percent > 0 && percent < 100)\r\n      return (\r\n        <>\r\n          loading...\r\n          <ProgressBar now={percent} animated />\r\n        </>\r\n      );\r\n  };\r\n\r\n  const renderFile = ({ address, type, upload }) => {\r\n    if (address) return <div dangerouslySetInnerHTML={{ __html: address }} />;\r\n    if (type && upload) {\r\n      switch (type) {\r\n        case 'video/mp4': {\r\n          return (\r\n            <video width=\"100%\" controls>\r\n              <source\r\n                src={`data:image/png;base64, ${upload}`}\r\n                type=\"video/mp4\"\r\n              />\r\n              <source\r\n                src={`data:image/png;base64, ${upload}`}\r\n                type=\"video/ogg\"\r\n              />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          );\r\n          break;\r\n        }\r\n        case 'image/*':\r\n          return (\r\n            <img\r\n              className=\"img-thumbnail img-fluid\"\r\n              src={`data:image/png;base64, ${upload}`}\r\n            />\r\n          );\r\n          break;\r\n        default:\r\n          return (\r\n            <img\r\n              className=\"img-thumbnail img-fluid\"\r\n              src={`data:image/png;base64, ${upload}`}\r\n            />\r\n          );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`chat-message chat-message--${role}`}>\r\n      {role === 'friend' && (\r\n        <h4>\r\n          {avatarSrc ? (\r\n            <Image src={avatarSrc} roundedCircle />\r\n          ) : (\r\n            <PersonCircle size={24} />\r\n          )}\r\n          <span>{title}</span>\r\n        </h4>\r\n      )}\r\n      <div className=\"chat-message__body\">\r\n        {renderProgress(percent)}\r\n        <span className=\"chat-message__date\">{moment(date).format('LTS')}</span>\r\n        {renderFile({ address, percent, type, upload })}\r\n        {content && (\r\n          <p className=\"chat-message__body--text\">\r\n            {ReactEmoji.emojify(content)}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport Message from '../Message';\r\nimport './index.scss';\r\n\r\nconst Messages = ({ messages, name, ...rest }) => (\r\n  <ScrollToBottom className=\"chat__messages\">\r\n    {messages.map((message) => {\r\n      return (\r\n        <Message\r\n          key={`name-${message.id}`}\r\n          message={message}\r\n          name={name}\r\n          {...rest}\r\n        />\r\n      );\r\n    })}\r\n  </ScrollToBottom>\r\n);\r\n\r\nexport default React.memo(Messages);\r\n","export function dataURLtoFile(base64, config, callback) {\r\n  var arr = base64.split(','),\r\n    mime = arr[0].match(/:(.*?);/)[1],\r\n    bstr = atob(arr[1]),\r\n    n = bstr.length,\r\n    u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], config.name, { type: mime });\r\n}\r\n\r\nexport function minifiedDataURL(readerDataUrl, config, callback) {\r\n  return new Promise((resolve) => {\r\n    // let video = document.createElement('video');\r\n    // video.setAttribute('src', readerDataUrl);\r\n    let img = new Image();\r\n    // 要從這裡讀取到type\r\n    img.src = readerDataUrl;\r\n    img.onload = () => {\r\n      // var that = this;\r\n      // 預設按比例壓縮\r\n      let width = img.width,\r\n        height = img.height,\r\n        scale = width / height;\r\n      const resizedWidth = 400;\r\n      let resizedHeight = resizedWidth / scale;\r\n      let quality = 0.7; // 預設圖片質量為0.7\r\n      //生成canvas\r\n      // 關鍵字\r\n      let canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      // 建立屬性節點\r\n      const anw = document.createAttribute('width');\r\n      anw.nodeValue = resizedWidth;\r\n      const anh = document.createAttribute('height');\r\n      anh.nodeValue = resizedHeight;\r\n      canvas.setAttributeNode(anw);\r\n      canvas.setAttributeNode(anh);\r\n      ctx.drawImage(img, 0, 0, resizedWidth, resizedHeight);\r\n      // 影象質量\r\n      if (config.quality && config.quality <= 1 && config.quality > 0) {\r\n        quality = config.quality;\r\n      }\r\n      /*\r\n          我們只需要把<img>獲取到的圖片放到<canvas>裡再通過.toDataURL()方法轉化下，\r\n          就可以得到以 base64 編碼的 dataURL。來看這個方法的語法： \r\n          */\r\n      var base64 = canvas.toDataURL('image/jpeg', 'image/webp', quality);\r\n      const newFile = dataURLtoFile(base64, config, callback);\r\n      resolve(newFile);\r\n    };\r\n  });\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport qs from 'query-string';\r\nimport io from 'socket.io-client';\r\n// import { Container } from 'react-bootstrap';\r\nimport Input from '../Input';\r\nimport InfoBar from '../InfoBar';\r\nimport Messages from '../Messages';\r\nimport FileProcessor from '../../util/FileProcessor';\r\n\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n  let { search } = useLocation();\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [counts, setCounts] = useState(0);\r\n\r\n  let ENDPOINT = 'localhost:5000';\r\n  if (process.env.NODE_ENV === 'production') {\r\n    ENDPOINT = 'https://dailytalk.herokuapp.com';\r\n  }\r\n  console.log(ENDPOINT);\r\n  useEffect(() => {\r\n    const { name, room } = qs.parse(search);\r\n    socket = io(ENDPOINT, {\r\n      path: '/socket.io',\r\n      transports: ['websocket'],\r\n      secure: true,\r\n    });\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      if (error) {\r\n        alert(error);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('disconnect');\r\n      socket.off();\r\n    };\r\n  }, [ENDPOINT, search]);\r\n\r\n  useEffect(() => {\r\n    const getMessage = (element, id) => element.id === id;\r\n    const addMessage = ({ messages, id, upload = '', user, type, percent }) => {\r\n      return [\r\n        ...messages,\r\n        {\r\n          id,\r\n          upload,\r\n          user,\r\n          type,\r\n          percent,\r\n        },\r\n      ];\r\n    };\r\n    const updateMessage = (index, messages, payload) => {\r\n      messages[index] = {\r\n        ...messages[index],\r\n        ...payload,\r\n      };\r\n      return [...messages];\r\n    };\r\n    socket.on('message', (message) =>\r\n      setMessages((messages) => {\r\n        return [...messages, message];\r\n      })\r\n    );\r\n    socket.on('percent', (amount, { id, user, type }) => {\r\n      setMessages((messages) => {\r\n        const messageIndex = messages.findIndex((message) =>\r\n          getMessage(message, id)\r\n        );\r\n        if (messageIndex < 0) {\r\n          const config = {\r\n            messages,\r\n            id,\r\n            percent: amount,\r\n            user,\r\n            type,\r\n          };\r\n          return addMessage(config);\r\n        } else {\r\n          messages[messageIndex].percent = amount;\r\n          return [...messages];\r\n        }\r\n      });\r\n    });\r\n    socket.on('file', ({ user, upload, type, id }) => {\r\n      if (upload) {\r\n        setMessages((messages) => {\r\n          const messageIndex = messages.findIndex((message) =>\r\n            getMessage(message, id)\r\n          );\r\n          const payload = {\r\n            id,\r\n            user,\r\n            upload,\r\n            type,\r\n          };\r\n          return updateMessage(messageIndex, messages, payload);\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('roomData', ({ users }) => {\r\n      setCounts(users.length);\r\n    });\r\n  }, [counts]);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  };\r\n\r\n  const sendFile = (file) => {\r\n    /* build => 非同步promise處裡檔案 */\r\n    FileProcessor.process(file, socket).then((minifiedFileProcessor) => {\r\n      minifiedFileProcessor.send();\r\n    });\r\n  };\r\n\r\n  const uploadFile = (file) => {\r\n    FileProcessor.process(file, socket).then((originalFileProcessor) =>\r\n      originalFileProcessor.upload()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InfoBar room={room} counts={counts} />\r\n      <Messages messages={messages} name={name} />\r\n      <Input\r\n        message={message}\r\n        setMessage={setMessage}\r\n        sendMessage={sendMessage}\r\n        sendFile={sendFile}\r\n        uploadFile={uploadFile}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import ss from 'socket.io-stream';\r\nimport { dataURLtoFile } from './FileConverter';\r\n\r\nclass FileProcessor {\r\n  constructor(file, socket, callback) {\r\n    console.log('檔案', file);\r\n\r\n    this.socket = socket;\r\n    this.file = file;\r\n    this.name = file.name;\r\n  }\r\n  static process(file, socket) {\r\n    const config = {\r\n      name: file.name,\r\n      quality: 0.6,\r\n      type: file.type,\r\n    };\r\n    return convertToDataUrl(file, config)\r\n      .then(({ readerDataUrl, config, callback }) => {\r\n        this.base64 = readerDataUrl;\r\n        console.log('轉換成convertToDataUrl');\r\n        switch (config.type) {\r\n          // case 'image/jpeg': {\r\n          //   return minifiedDataURL(readerDataUrl, config, callback);\r\n          // }\r\n          case 'image/jpeg':\r\n          case 'video/mp4': {\r\n            return new Promise((resolve) => {\r\n              const newFile = dataURLtoFile(readerDataUrl, config, callback);\r\n              resolve(newFile);\r\n            });\r\n          }\r\n          default: {\r\n            alert('the type is not supprted');\r\n          }\r\n        }\r\n      })\r\n      .then((data) => {\r\n        this.data = data;\r\n        return new FileProcessor(this.data, socket);\r\n      });\r\n  }\r\n  send() {\r\n    console.log('送出', this, this.file.size);\r\n\r\n    const stream = ss.createStream();\r\n    const blobStream = ss.createBlobReadStream(this.file); //for browser use, 本來寫法是什麼\r\n    blobStream.pipe(stream);\r\n\r\n    ss(this.socket).emit('sendFile', stream, {\r\n      name: this.file.name,\r\n      type: this.file.type,\r\n      size: this.file.size,\r\n    });\r\n    console.log('this.file', this.file);\r\n    // const totalSize = this.file.size;\r\n    // let size = 0;\r\n    // blobStream.on('data', function (chunk) {\r\n    //   size += chunk.length;\r\n    //   console.log('totalSize', totalSize);\r\n    //   console.log(Math.floor((size / totalSize) * 100) + '%');\r\n    // });\r\n    // console.log('完成Blob', Date());\r\n  }\r\n\r\n  upload() {\r\n    const stream = ss.createStream();\r\n    ss(this.socket).emit('uploadFile', stream, {\r\n      name: this.file.name,\r\n      type: this.file.type,\r\n      size: this.file.size,\r\n    });\r\n    const blobStream = ss.createBlobReadStream(this.file); //for browser use, 本來寫法是什麼\r\n    // let size = 0;\r\n    // blobStream.on('data', function(chunk) {\r\n    //   size += chunk.length;\r\n    //   console.log(Math.floor((size / file.size) * 100) + '%');\r\n    // });\r\n    blobStream.pipe(stream);\r\n  }\r\n}\r\n\r\nconst convertToDataUrl = (file, config, callback) => {\r\n  return new Promise((resolve) => {\r\n    // 王牌文件 https://kknews.cc/zh-tw/code/e6p2ygq.html\r\n    // 神文 https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/227679/\r\n    /* 使用FileReader對象分三步走： 一 創建FileReader實例 */\r\n    var reader = new FileReader();\r\n    /* 開始讀取指定的Blob物件或File物件中的內容. 當讀取操作完成時,readyState屬性的值會成為DONE,\r\n    如果設定了onloadend事件處理程式,則呼叫之.\r\n    同時,result屬性中將包含一個data: URL格式的字串以表示所讀取檔案的內容.\r\n  */\r\n\r\n    /* 讀取Blob或者File對象的數據內容 */\r\n    reader.readAsDataURL(file); // 讀取文件內容，結果用data:url的字符串形式表示\r\n\r\n    // reader.onloadstart = function() {\r\n    //   console.log('加載已經開始');\r\n    // };\r\n    // reader.onprogress = function(what) {\r\n    //   console.log('啥', what); //注意必包\r\n    // };\r\n    /** 設置回調函數，這裡以讀取成功的回調函數為例： */\r\n    reader.onload = function () {\r\n      const readerDataUrl = this.result;\r\n      console.log('加載開始');\r\n\r\n      resolve({ readerDataUrl, config, callback });\r\n    };\r\n    reader.onloadend = function () {\r\n      console.log('加載已經結束');\r\n    };\r\n  });\r\n};\r\n\r\nexport default FileProcessor;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { Toast } from 'react-bootstrap';\r\nimport { Portal } from 'react-portal';\r\nimport './index.scss';\r\n// import useMediaQuery from '../../util/useMediaQuery';\r\n\r\nconst Box = ({\r\n  title,\r\n  content,\r\n  control,\r\n  // setHasNotification,\r\n  hasNotification,\r\n  notificationContent,\r\n}) => {\r\n  // const mediaQuery = useMediaQuery();\r\n  const portalDom = (\r\n    <Portal node={document && document.getElementById('portal')}>\r\n      <Toast delay={3000} autohide>\r\n        <Toast.Header>\r\n          <strong className=\"mr-auto\">FAILURE</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{notificationContent}</Toast.Body>\r\n      </Toast>\r\n    </Portal>\r\n  );\r\n  return (\r\n    <div className=\"chat__box\">\r\n      <h1>{title}</h1>\r\n      {content}\r\n      <div>{control}</div>\r\n      {hasNotification && portalDom}\r\n    </div>\r\n  );\r\n};\r\n\r\nBox.defaultProps = {\r\n  setHasNotification: () => {},\r\n  hasNotification: false,\r\n};\r\n\r\nexport default Box;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Box from '../Box';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport './index.scss';\r\n\r\nconst Join = () => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [avatar, setAvatar] = useState();\r\n  const handleChange = (event) => {\r\n    setAvatar(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n  return (\r\n    <Box\r\n      title=\"Join\"\r\n      content={\r\n        <Form>\r\n          <input type=\"file\" onChange={handleChange} />\r\n          <img width=\"50px\" src={avatar} />\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <Form.Label>Room</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Room\"\r\n              onChange={(e) => setRoom(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      }\r\n      control={\r\n        <Link\r\n          onClick={(event) => (!name || !room ? event.preventDefault() : null)}\r\n          to={`/chat?name=${name}&room=${room}`}\r\n        >\r\n          <Button block type=\"submit\">\r\n            Join In\r\n          </Button>\r\n        </Link>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","import axios from 'axios';\r\n\r\nlet API_URL = 'https://localhost:5000/api/auth/';\r\nif (process.env.NODE_ENV === 'production') {\r\n  API_URL = 'https://dailytalk.herokuapp.com/api/auth/';\r\n}\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + 'signin', {\r\n        username,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem('user', JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n  }\r\n\r\n  signup(username, email, password) {\r\n    return axios.post(API_URL + 'signup', {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport Box from '../Box';\r\nimport AuthService from '../../util/auth';\r\nimport './index.scss';\r\n\r\nconst Login = (props) => {\r\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    AuthService.login(username, password)\r\n      .then((response) => {\r\n        // 以驗證mongodb data以及設定localstorage\r\n        console.log('資料', response);\r\n        setRedirectToReferrer(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log('catch', error);\r\n        setHasError(true);\r\n      });\r\n  };\r\n  // const { from } = props.location.state || { from: { pathname: '/' } };\r\n  if (redirectToReferrer === true) {\r\n    return <Redirect to=\"join\" />;\r\n  }\r\n  const handleNameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        title=\"Login\"\r\n        content={\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                onChange={handleNameChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handlePasswordChange}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        }\r\n        control={\r\n          <Button onClick={login} variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        }\r\n        // setHasNotification={setHasError}\r\n        hasNotification={hasError}\r\n        notificationContent=\"Oops, something went wrong!\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport Box from '../Box';\r\nimport axios from 'axios';\r\nimport './index.scss';\r\n\r\nconst Signup = (props) => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [hasSignup, setHasSignup] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const signup = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post('/api/auth/signup', {\r\n        username,\r\n        email,\r\n        password,\r\n        roles: ['user'],\r\n      })\r\n      .then((response) => {\r\n        setHasSignup(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log('catch', error);\r\n        setHasError(true);\r\n      });\r\n  };\r\n  const handleNameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  if (hasSignup) return <Redirect to=\"login\" />;\r\n  console.log('process', process.env);\r\n  return (\r\n    <Box\r\n      title=\"Sign Up\"\r\n      content={\r\n        <Form>\r\n          <Form.Group controlId=\"formBasicName\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Normal text\"\r\n              onChange={handleNameChange}\r\n              value={username}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={handleEmailChange}\r\n              value={email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={handlePasswordChange}\r\n              value={password}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      }\r\n      control={\r\n        <Button onClick={signup} variant=\"primary\" type=\"submit\">\r\n          Sign Up\r\n        </Button>\r\n      }\r\n      setHasNotification={setHasError}\r\n      hasNotification={hasError}\r\n      notificationContent=\"Oops, something went wrong!\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../../util/auth';\r\nimport './index.scss';\r\n\r\nconst Home = () => (\r\n  <div className=\"chat-home\">\r\n    <h1>Fresh Talk</h1>\r\n    <div className=\"chat-home__controls\">\r\n      <Link to=\"/signup\">Sign up</Link>\r\n      {AuthService.getCurrentUser() ? (\r\n        <Link to=\"/join\">Join</Link>\r\n      ) : (\r\n        <Link to=\"/login\">Login</Link>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import { Jumbotron } from 'react-bootstrap';\r\n// import { ArrowLeftCircle, PeopleFill } from 'react-bootstrap-icons';\r\nimport './index.scss';\r\n\r\nconst Head = ({ children }) => (\r\n  <section className=\"chat__head\">{children}</section>\r\n);\r\n\r\nexport default Head;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthService from '../../util/auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      AuthService.getCurrentUser() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/login',\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { Button } from 'react-bootstrap';\r\nimport { BoxArrowLeft } from 'react-bootstrap-icons';\r\nimport './index.scss';\r\nimport AuthService from '../../util/auth';\r\n\r\n/**\r\n * withRouter will pass updated match, location,\r\n * and history props to the wrapped component whenever it renders.\r\n */\r\nconst AuthButton = withRouter(\r\n  ({ history }) =>\r\n    AuthService.getCurrentUser() && (\r\n      <BoxArrowLeft\r\n        size=\"30\"\r\n        color=\"#fff\"\r\n        onClick={() => {\r\n          AuthService.logout();\r\n          history.push('/');\r\n        }}\r\n      >\r\n        Sign out\r\n      </BoxArrowLeft>\r\n    )\r\n);\r\n\r\nexport default AuthButton;\r\n","import React from 'react';\r\n// import { Toast } from 'react-bootstrap';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  // Link,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  // withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport {\r\n  Home,\r\n  Head,\r\n  Login,\r\n  Signup,\r\n  AuthButton,\r\n  Join,\r\n  Chat,\r\n  PrivateRoute,\r\n} from './components';\r\nimport './index.scss';\r\n// const NotFound = () => (\r\n//   <div>\r\n//     <p>The page does not exist</p>\r\n//   </div>\r\n// );\r\nconst App = () => (\r\n  <Router>\r\n    <Head>\r\n      <AuthButton />\r\n    </Head>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/Signup\" component={Signup} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <PrivateRoute path=\"/join\" component={Join} />\r\n      <PrivateRoute path=\"/chat\" component={Chat} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n    <div id=\"portal\"></div>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App.js';\r\n\r\nReactDom.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}