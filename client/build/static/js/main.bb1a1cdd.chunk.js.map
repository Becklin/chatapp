{"version":3,"sources":["context/notification-context.js","components/IconButton/index.js","components/Input/index.js","components/LinkWithIcon/index.js","variables.js","components/InfoBar/index.js","components/Message/index.js","components/Messages/index.js","util/FileConverter.js","components/Chat/index.js","util/FileProcessor.js","components/Box/index.js","components/Join/index.js","util/auth.js","components/Login/index.js","components/Signup/index.js","components/Home/index.js","components/Head/index.js","components/PrivateRoute/index.js","components/AuthButton/index.js","components/Title/index.js","App.js","index.js"],"names":["NotificationContext","createContext","NotificationContextProvider","children","useState","notification","setNotification","Provider","value","IconButton","onHandleClick","className","name","disabled","icon","iconName","htmlFor","type","id","accept","onChange","e","files","Array","from","target","formData","FormData","append","get","Input","message","setMessage","sendMessage","sendFile","uploadFile","placeholder","event","onKeyPress","key","size","onClick","color","primaryStyle","StyledLink","Link","props","primary","LinkWithIcon","to","width","toString","defaultProps","vars","InfoBarStyled","InfoBar","room","counts","React","memo","Message","avatarSrc","user","content","upload","address","percent","date","isSentByCurrentUser","trimmedName","trim","toLowerCase","role","title","src","roundedCircle","ProgressBar","now","animated","renderProgress","moment","format","dangerouslySetInnerHTML","__html","controls","renderFile","ReactEmoji","emojify","Messages","messages","rest","map","dataURLtoFile","base64","config","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","socket","FileProcessor","file","this","stream","ss","createStream","createBlobReadStream","pipe","emit","quality","convertToDataUrl","then","readerDataUrl","callback","Promise","resolve","alert","data","a","addImageProcess","reject","reader","FileReader","readAsDataURL","onload","result","onerror","onloadend","console","log","Chat","search","useLocation","setName","setRoom","setMessages","setCounts","ENDPOINT","useEffect","qs","parse","io","path","transports","secure","error","off","getMessage","element","on","amount","messageIndex","findIndex","addMessage","index","payload","updateMessage","users","preventDefault","process","minifiedFileProcessor","send","originalFileProcessor","BoxStyle","ControlStyled","Box","control","Join","avatar","setAvatar","isComplete","FileInputStyled","Form","URL","createObjectURL","Group","controlId","Label","Control","API_URL","username","password","axios","post","response","accessToken","localStorage","setItem","JSON","stringify","catch","err","removeItem","email","getItem","Login","state","useContext","redirectToReferrer","setRedirectToReferrer","setUsername","setPassword","pathname","Button","AuthService","login","status","setTimeout","variant","Signup","setEmail","hasSignup","setHasSignup","signup","HomeStyled","Home","getCurrentUser","Head","PrivateRoute","Component","component","location","render","AuthButton","withRouter","history","logout","push","TitleStyled","Title","App","styles","css","emotionNormalize","exact","ReactDom","document","querySelector"],"mappings":"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","file":"static/js/main.bb1a1cdd.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\n\n// Create Context Object\nexport const NotificationContext = createContext();\n\n// Create a provider for components to consume and subscribe to changes\nexport const NotificationContextProvider = ({children}) => {\n  const [notification, setNotification] = useState({});\n\n  return (\n    <NotificationContext.Provider value={[notification, setNotification]}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nNotificationContextProvider.propTypes = {\n  children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n  ]).isRequired\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\n//USER送發訊息的人，name該聊天室使用者名字\nconst IconButton = ({ onHandleClick, className, name, disabled, icon }) => {\n  const onChange = (e) => {\n    const files = Array.from(e.target.files);\n    let formData = new FormData();\n    formData.append(0, files[0]);\n    onHandleClick(formData.get(0));\n  };\n  const iconName = `icon-${name}`;\n  return (\n    <span className={`chat__icon ${className} ${disabled ? 'disabled' : ''}`}>\n      <label className=\"chat__label\" htmlFor={iconName}>\n        {icon && icon}\n      </label>\n      <input\n        className=\"hidden-input\"\n        type=\"file\"\n        name={iconName}\n        id={iconName}\n        accept=\"image/*,video/*,audio/*\"\n        onChange={onChange}\n      />\n    </span>\n  );\n};\n\nIconButton.propTypes = {\n  onHandleClick: PropTypes.func,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n}\n\nexport default IconButton;\n","import React from 'react';\n// import { Row, Col, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ChatTextFill, CloudUploadFill, Image } from 'react-bootstrap-icons';\nimport IconButton from '../IconButton';\nimport './index.scss';\n\nconst Input = ({\n  message = '',\n  setMessage,\n  sendMessage,\n  sendFile,\n  uploadFile,\n}) => {\n  const handleSendMessage = (event) => {\n    sendMessage(event);\n  };\n  return (\n    <form className=\"chat__form\">\n      <textarea\n        className=\"chat__message\"\n        placeholder=\"write some message...\"\n        value={message}\n        onChange={(event) => setMessage(event.target.value)}\n        onKeyPress={(event) =>\n          event.key === 'Enter' ? setMessage(event.target.value) : null\n        }\n      />\n      <div className=\"chat__controls\">\n        <IconButton\n          disabled={message}\n          className=\"chat__flex\"\n          type=\"file\"\n          onHandleClick={sendFile}\n          icon={<Image />}\n          name=\"files\"\n        />\n        <IconButton\n          disabled={message}\n          className=\"chat__flex\"\n          type=\"file\"\n          onHandleClick={uploadFile}\n          icon={<CloudUploadFill />}\n          name=\"upload\"\n        />\n        <ChatTextFill\n          className=\"chat__flex\"\n          size=\"32\"\n          onClick={message ? handleSendMessage : null}\n          color={message ? 'darkslategray' : '#e3e3e3'}\n        />\n      </div>\n    </form>\n  );\n};\n\nInput.propTypes = {\n  message: PropTypes.string,\n  setMessage: PropTypes.func,\n  sendMessage: PropTypes.func,\n  sendFile: PropTypes.func,\n  uploadFile: PropTypes.func,\n}\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst primaryStyle = () =>\n  css`\n    padding: 16px;\n    background: #007bff;\n    border-radius: 5px;\n    margin: 8px;\n    color: #ffffff;\n    display: inline-block;\n  `\n\nconst StyledLink = styled(Link)`\n    &:focus, &:hover, &:visited, &:link, &:active {\n      text-decoration: none;\n      color: #2A3346,\n      display: flex;\n      justify-content: center;\n      ${props => props.primary && primaryStyle};\n      & > svg {\n        margin: 0 8px;\n      }\n  }\n`;\n\nconst LinkWithIcon = ({ to, icon, width, children, disabled, primary }) => \n    (<StyledLink width={width} to={to} disabled={disabled} primary={primary && primary.toString()}>{icon}{children}</StyledLink>);\n\nLinkWithIcon.defaultProps = {\n  icon: null,\n}\n\nLinkWithIcon.propTypes = {\n  to: PropTypes.string,\n  icon: PropTypes.element,\n  width: PropTypes.string,\n  children: PropTypes.string,\n  disabled: PropTypes.bool,\n  primary: PropTypes.bool,\n}\n\nexport default LinkWithIcon;\n","export const vars = {\n    main: \"#3cb67f\",\n    BtnBgColor: \"#2F80EB\",\n    BorderDecoColor: \"#ECECEE\",\n    MainFontColor: \"#2A3346\",\n    ChatFontColor: \"#808187\",\n    ChatRoomBfColor: \"#F2F3F7\",\n    bgGradient: \"radial-gradient(circle, rgba(238,238,238,1) 0%, rgba(255,255,255,1) 100%)\",\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ArrowLeftCircle, PeopleFill } from 'react-bootstrap-icons';\nimport LinkWithIcon from '../LinkWithIcon';\nimport { vars }  from \"../../variables\";\nimport styled from \"@emotion/styled\";\n\nconst InfoBarStyled = styled('div')`\n      display: flex;\n      align-items: center;\n      padding: 0 50px 0 12px;\n      & .chat__room {\n        width: 100px;\n        flex: 5;\n        color: ${vars.MainFontColor};\n      }\n      & .chat__count {\n        width: 100px;\n        flex: 1;\n        color: ${vars.MainFontColor};\n      }\n      & .chat__back {\n        width: 100px;\n        flex: 1;\n      }\n`\n\nconst InfoBar = ({ room, counts }) => (\n  <InfoBarStyled>\n    <div className=\"chat__room\">\n      <h3>{room}</h3>\n    </div>\n    <div className=\"chat__count\">\n      {counts} <PeopleFill color={vars.MainFontColor} size={24} />\n    </div>\n    <div className=\"chat__back\">\n      <LinkWithIcon\n            to='/'\n            icon={<ArrowLeftCircle color={vars.MainFontColor} size={24} />}\n      />\n    </div>\n  </InfoBarStyled>\n);\n\nInfoBar.propTypes = {\n  room: PropTypes.string,\n  counts: PropTypes.number,\n}\n\nexport default React.memo(InfoBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, ProgressBar } from 'react-bootstrap';\nimport { PersonCircle } from 'react-bootstrap-icons';\nimport ReactEmoji from 'react-emoji';\nimport moment from 'moment';\nimport './index.scss';\n\n//USER送發訊息的人，name該聊天室使用者名字\nconst Message = ({\n  message,\n  name,\n  avatarSrc,\n}) => {\n  const { user, content, upload, type, address, percent, date } = message;\n  let isSentByCurrentUser = false;\n  const trimmedName = name.trim().toLowerCase();\n  if (trimmedName === user) isSentByCurrentUser = true;\n  const role = isSentByCurrentUser ? 'user' : 'friend';\n  const title = role === 'user' ? trimmedName : user;\n  const renderProgress = (percent) => {\n    if (percent > 0 && percent < 100)\n      return (\n        <>\n          loading...\n          <ProgressBar now={percent} animated />\n        </>\n      );\n  };\n\n  const renderFile = ({ address, type, upload }) => {\n    if (address) return <div dangerouslySetInnerHTML={{ __html: address }} />;\n    if (type && upload) {\n      switch (type) {\n        case 'video/mp4': {\n          return (\n            <video width=\"100%\" controls>\n              <source\n                src={`data:image/png;base64, ${upload}`}\n                type=\"video/mp4\"\n              />\n              <source\n                src={`data:image/png;base64, ${upload}`}\n                type=\"video/ogg\"\n              />\n              Your browser does not support the video tag.\n            </video>\n          );\n        }\n        case 'image/*':\n          return (\n            <img\n              className=\"img-thumbnail img-fluid\"\n              src={`data:image/png;base64, ${upload}`}\n            />\n          );\n        default:\n          return (\n            <img\n              className=\"img-thumbnail img-fluid\"\n              src={`data:image/png;base64, ${upload}`}\n            />\n          );\n      }\n    }\n  };\n\n  return (\n    <div className={`chat-message chat-message--${role}`}>\n      {role === 'friend' && (\n        <h4>\n          {avatarSrc ? (\n            <Image src={avatarSrc} roundedCircle />\n          ) : (\n            <PersonCircle size={24} />\n          )}\n          <span>{title}</span>\n        </h4>\n      )}\n      <div className=\"chat-message__body\">\n        {renderProgress(percent)}\n        <span className=\"chat-message__date\">{moment(date).format('LTS')}</span>\n        {renderFile({ address, percent, type, upload })}\n        {content && (\n          <p className=\"chat-message__body--text\">\n            {ReactEmoji.emojify(content)}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.object,\n  counts: PropTypes.number,\n  name: PropTypes.string,\n  avatarSrc: PropTypes.string,\n}\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport Message from '../Message';\nimport './index.scss';\n\nconst Messages = ({ messages, name, ...rest }) => (\n  <ScrollToBottom className=\"chat__messages\">\n    {messages.map((message) => {\n      return (\n        <Message\n          key={`name-${message.id}`}\n          message={message}\n          name={name}\n          {...rest}\n        />\n      );\n    })}\n  </ScrollToBottom>\n);\n\nMessages.propTypes = {\n  messages: PropTypes.any,\n  name: PropTypes.string,\n}\n\nexport default React.memo(Messages);\n","export function dataURLtoFile(base64, config) {\n  var arr = base64.split(','),\n    mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], config.name, { type: mime });\n}\n\nexport function minifiedDataURL(readerDataUrl, config, callback) {\n  return new Promise((resolve) => {\n    // let video = document.createElement('video');\n    // video.setAttribute('src', readerDataUrl);\n    let img = new Image();\n    // 要從這裡讀取到type\n    img.src = readerDataUrl;\n    img.onload = () => {\n      // var that = this;\n      // 預設按比例壓縮\n      let width = img.width,\n        height = img.height,\n        scale = width / height;\n      const resizedWidth = 400;\n      let resizedHeight = resizedWidth / scale;\n      let quality = 0.7; // 預設圖片質量為0.7\n      //生成canvas\n      // 關鍵字\n      let canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      // 建立屬性節點\n      const anw = document.createAttribute('width');\n      anw.nodeValue = resizedWidth;\n      const anh = document.createAttribute('height');\n      anh.nodeValue = resizedHeight;\n      canvas.setAttributeNode(anw);\n      canvas.setAttributeNode(anh);\n      ctx.drawImage(img, 0, 0, resizedWidth, resizedHeight);\n      // 影象質量\n      if (config.quality && config.quality <= 1 && config.quality > 0) {\n        quality = config.quality;\n      }\n      /*\n          我們只需要把<img>獲取到的圖片放到<canvas>裡再通過.toDataURL()方法轉化下，\n          就可以得到以 base64 編碼的 dataURL。來看這個方法的語法： \n          */\n      var base64 = canvas.toDataURL('image/jpeg', 'image/webp', quality);\n      const newFile = dataURLtoFile(base64, config, callback);\n      resolve(newFile);\n    };\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport qs from 'query-string';\nimport io from 'socket.io-client';\n// import { Container } from 'react-bootstrap';\nimport Input from '../Input';\nimport InfoBar from '../InfoBar';\nimport Messages from '../Messages';\nimport FileProcessor from '../../util/FileProcessor';\n\nlet socket;\n\nconst Chat = () => {\n  let { search } = useLocation();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [counts, setCounts] = useState(0);\n\n  let ENDPOINT = 'localhost:5000';\n  if (process.env.NODE_ENV === 'production') {\n    ENDPOINT = 'https://dailytalk.herokuapp.com';\n  }\n  useEffect(() => {\n    const { name, room } = qs.parse(search);\n    socket = io(ENDPOINT, {\n      path: '/socket.io',\n      transports: ['websocket'],\n      secure: true,\n    });\n    setName(name);\n    setRoom(room);\n\n    socket.emit('join', { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, search]);\n\n  useEffect(() => {\n    const getMessage = (element, id) => element.id === id;\n    const addMessage = ({ messages, id, upload = '', user, type, percent }) => {\n      return [\n        ...messages,\n        {\n          id,\n          upload,\n          user,\n          type,\n          percent,\n        },\n      ];\n    };\n    const updateMessage = (index, messages, payload) => {\n      messages[index] = {\n        ...messages[index],\n        ...payload,\n      };\n      return [...messages];\n    };\n    socket.on('message', (message) =>\n      setMessages((messages) => {\n        return [...messages, message];\n      })\n    );\n    socket.on('percent', (amount, { id, user, type }) => {\n      setMessages((messages) => {\n        const messageIndex = messages.findIndex((message) =>\n          getMessage(message, id)\n        );\n        if (messageIndex < 0) {\n          const config = {\n            messages,\n            id,\n            percent: amount,\n            user,\n            type,\n          };\n          return addMessage(config);\n        } else {\n          messages[messageIndex].percent = amount;\n          return [...messages];\n        }\n      });\n    });\n    socket.on('file', ({ user, upload, type, id }) => {\n      if (upload) {\n        setMessages((messages) => {\n          const messageIndex = messages.findIndex((message) =>\n            getMessage(message, id)\n          );\n          const payload = {\n            id,\n            user,\n            upload,\n            type,\n          };\n          return updateMessage(messageIndex, messages, payload);\n        });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on('roomData', ({ users }) => {\n      setCounts(users.length);\n    });\n  }, [counts]);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    console.log(message);\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  const sendFile = (file) => {\n    /* build => 非同步promise處裡檔案 */\n    FileProcessor.process(file, socket).then((minifiedFileProcessor) => {\n      minifiedFileProcessor.send();\n    });\n  };\n\n  const uploadFile = (file) => {\n    FileProcessor.process(file, socket).then((originalFileProcessor) =>\n      originalFileProcessor.upload()\n    );\n  };\n\n  return (\n    <>\n      <InfoBar room={room} counts={counts} />\n      <Messages messages={messages} name={name} />\n      <Input\n        message={message}\n        setMessage={setMessage}\n        sendMessage={sendMessage}\n        sendFile={sendFile}\n        uploadFile={uploadFile}\n      />\n    </>\n  );\n};\n\nexport default Chat;\n","import ss from 'socket.io-stream';\nimport { dataURLtoFile } from './FileConverter';\n\nclass FileProcessor {\n  constructor(file, socket) {\n    this.socket = socket;\n    this.file = file;\n    this.name = file.name;\n  }\n  static process(file, socket) {\n    const config = {\n      name: file.name,\n      quality: 0.6,\n      type: file.type\n    };\n    return convertToDataUrl(file, config)\n      .then(({ readerDataUrl, config, callback }) => {\n        this.base64 = readerDataUrl;\n        switch (config.type) {\n          // case 'image/jpeg': {\n          //   return minifiedDataURL(readerDataUrl, config, callback);\n          // }\n          case 'image/jpeg':\n          case 'video/mp4': {\n            return new Promise(resolve => {\n              const newFile = dataURLtoFile(readerDataUrl, config, callback);\n              resolve(newFile);\n            });\n          }\n          default: {\n            alert('the type is not supprted');\n          }\n        }\n      })\n      .then(data => {\n        this.data = data;\n        return new FileProcessor(this.data, socket);\n      });\n  }\n  send() {\n    const stream = ss.createStream();\n    const blobStream = ss.createBlobReadStream(this.file); //for browser use, 本來寫法是什麼\n    blobStream.pipe(stream);\n\n    ss(this.socket).emit('sendFile', stream, {\n      name: this.file.name,\n      type: this.file.type,\n      size: this.file.size\n    });\n  }\n\n  upload() {\n    const stream = ss.createStream();\n    ss(this.socket).emit('uploadFile', stream, {\n      name: this.file.name,\n      type: this.file.type,\n      size: this.file.size\n    });\n    const blobStream = ss.createBlobReadStream(this.file); //for browser use, 本來寫法是什麼\n    blobStream.pipe(stream);\n  }\n}\nconst convertToDataUrl = async (file, config, callback) => {\n  // 王牌文件 https://kknews.cc/zh-tw/code/e6p2ygq.html\n  // 神文 https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/227679/\n  /* 使用FileReader對象分三步走： 一 創建FileReader實例 */\n  // var reader = new FileReader();\n  /* 開始讀取指定的Blob物件或File物件中的內容. 當讀取操作完成時,readyState屬性的值會成為DONE,\n    如果設定了onloadend事件處理程式,則呼叫之.\n    同時,result屬性中將包含一個data: URL格式的字串以表示所讀取檔案的內容.\n  */\n\n  /* 讀取Blob或者File對象的數據內容 */\n  // reader.readAsDataURL(file); // 讀取文件內容，結果用data:url的字符串形式表示\n\n  // reader.onloadstart = function() {\n  //   console.log('加載已經開始');\n  // };\n  // reader.onprogress = function(what) {\n  //   console.log('啥', what); //注意必包\n  // };\n  /** 設置回調函數，這裡以讀取成功的回調函數為例： */\n  const addImageProcess = (file, config, callback) => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.readAsDataURL(file); // 讀取文件內容，結果用data:url的字符串形式表示\n      reader.onload = function() {\n        const readerDataUrl = this.result;\n        resolve({ readerDataUrl, config, callback });\n      };\n      reader.onerror = () => reject('加载失败');\n      reader.onloadend = function() {\n        console.log('加載已經結束');\n      };\n    });\n  };\n  return await addImageProcess(file, config, callback);\n};\n\n// const convertToDataUrl2 = (file, config, callback) => {\n//   return new Promise(resolve => {\n//     // 王牌文件 https://kknews.cc/zh-tw/code/e6p2ygq.html\n//     // 神文 https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/227679/\n//     /* 使用FileReader對象分三步走： 一 創建FileReader實例 */\n//     var reader = new FileReader();\n//     /* 開始讀取指定的Blob物件或File物件中的內容. 當讀取操作完成時,readyState屬性的值會成為DONE,\n//     如果設定了onloadend事件處理程式,則呼叫之.\n//     同時,result屬性中將包含一個data: URL格式的字串以表示所讀取檔案的內容.\n//   */\n\n//     /* 讀取Blob或者File對象的數據內容 */\n//     reader.readAsDataURL(file); // 讀取文件內容，結果用data:url的字符串形式表示\n\n//     // reader.onloadstart = function() {\n//     //   console.log('加載已經開始');\n//     // };\n//     // reader.onprogress = function(what) {\n//     //   console.log('啥', what); //注意必包\n//     // };\n//     /** 設置回調函數，這裡以讀取成功的回調函數為例： */\n//     reader.onload = function() {\n//       const readerDataUrl = this.result;\n//       console.log('加載開始');\n\n//       resolve({ readerDataUrl, config, callback });\n//     };\n//     reader.onloadend = function() {\n//       console.log('加載已經結束');\n//     };\n//   });\n// };\n\nexport default FileProcessor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { Title } from '../../components';\n// import { css } from '@emotion/react';\n\nconst BoxStyle = styled('div')`\n  width: 300px;\n  margin: 0;\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst ControlStyled = styled('div')`\n  margin: 12px 0px;\n`\n// const Child = styled('span')`\n//   color: blue;\n// `\n// const Button = styled.button`\n//   color: ${props =>\n//     props.primary ? 'hotpink' : 'turquoise'};\n//     ${Child} {\n//       color: yellow;\n//     }\n// `\n// const AnotherSpan = Button.withComponent('span');\n// const dynamicStyle = props =>\n//   css`\n//     color: ${props.color};\n//   `\n//   const Example = styled('span')`\n//   color: lightgreen;\n//   & > a {\n//     color: hotpink;\n//   }\n//`\n\n// const Container = styled.div`\n//   ${dynamicStyle};\n// `\nconst Box = ({ title, content, control, notification }) => {\n  return (\n    <BoxStyle\n    className=\"chat__box\"\n    >\n        {/* <Example>\n    This is <a>nested</a>.\n  </Example> */}\n      {/* <Button\n        as=\"a\"\n        href=\"https://github.com/emotion-js/emotion\"\n      >\n        Emotion on GitHub\n      </Button>\n      <Container color=\"lightgreen\">\n        This is lightgreen.\n      </Container>\n      <H1>febfhtjffnfyukfukyf</H1>\n      <Button primary>ddd<Child>child</Child></Button>\n      <AnotherSpan>heyhehyehy</AnotherSpan> */}\n      <div>{notification.content}</div>\n      <Title>{title}</Title>\n      {content}\n      <ControlStyled>{control}</ControlStyled>\n    </BoxStyle>\n  );\n};\n// const H1 = styled('h1')(() => ({\n//   color: 'yellow'\n// }))\n\nBox.defaultProps = {\n  notification: {\n    content: \"\",\n    type: null,\n  }\n};\n\nBox.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.func,\n  control: PropTypes.element,\n  notification: PropTypes.object,\n};\n\nexport default Box;\n","import React, { useState } from 'react';\nimport Box from '../Box';\nimport { Form } from 'react-bootstrap';\nimport styled from '@emotion/styled';\nimport LinkWithIcon from \"../LinkWithIcon\";\nimport { vars } from '../../variables';\n\nimport './index.scss';\n\nconst Join = () => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [avatar, setAvatar] = useState();\n  const handleChange = (event) => {\n    setAvatar(URL.createObjectURL(event.target.files[0]));\n  };\n  const isComplete = name && room;\n\n  const FileInputStyled = styled('input')`\n    color: transparent;\n    position:relative;\n    height: 50px;\n    margin-left: -140px;\n    margin-top: 16px;\n    margin-bottom: 16px;\n    &::before {\n      content: 'Select some files';\n      display: inline-block;\n      background: ${vars.BorderDecoColor};\n      color: ${vars.ChatFontColor};;\n      border-radius: 3px;\n      padding: 0px 8px;\n      outline: none;\n      cursor: pointer;\n      width: 140px;\n      height: 50px;\n      position: absolute;\n      left: 140px;\n      line-height: 50px;\n    }\n  }\n  `\n  return (\n    <Box\n      title=\"Join\"\n      content={\n        <Form>\n          <FileInputStyled type=\"file\" onChange={handleChange} />\n          <img width=\"50px\" src={avatar} />\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => setName(e.target.value)}\n            />\n            <Form.Label>Room</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Room\"\n              onChange={(e) => setRoom(e.target.value)}\n            />\n          </Form.Group>\n        </Form>\n      }\n      control={\n          <LinkWithIcon\n            primary\n            disabled={isComplete}\n            width=\"90%\"\n            to={`/chat?name=${name}&room=${room}`}\n          >\n            Join In\n          </LinkWithIcon>\n      }\n    />\n  );\n};\n\nexport default Join;\n","import axios from 'axios';\n\nlet API_URL = '/api/auth/';\nif (process.env.NODE_ENV === 'production') {\n  API_URL = 'https://dailytalk.herokuapp.com/api/auth/';\n}\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + 'signin', {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem('user', JSON.stringify(response.data));\n        }\n        return response.data;\n      })\n      .catch((err) => {\n        console.log(\"login err\", err);\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  signup(username, email, password) {\n    return axios.post(API_URL + 'signup', {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    console.log(JSON.parse(localStorage.getItem('user')));\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { useState, useContext } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\n\nimport Box from '../Box';\nimport { NotificationContext } from '../../context/notification-context';\nimport AuthService from '../../util/auth';\nimport './index.scss';\n\nconst Login = () => {\n  const { state } = useLocation();\n  const [notification, setNotification] = useContext(NotificationContext);\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const login = (e) => {\n    e.preventDefault();\n    AuthService.login(username, password)\n      .then(() => {\n        // 以驗證mongodb data以及設定localstorage\n        setRedirectToReferrer(true);\n      })\n      .catch((error) => {\n        setNotification({\n          status: error.name,\n          content: error.message,\n        });\n        setTimeout(() => {\n          setNotification({\n            status: null,\n            content: null,\n          });\n        }, 3000);\n      });\n  };\n  const { from } = state || { from: { pathname: '/' } };\n  if (redirectToReferrer === true) {\n    return <Redirect to={from} />;\n  }\n  const handleNameChange = (e) => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  return (\n    <>\n      <Box\n        title=\"Login\"\n        notification={notification}\n        content={\n          <Form>\n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={handleNameChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={handlePasswordChange}\n              />\n            </Form.Group>\n          </Form>\n        }\n        control={\n          <Button onClick={login} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        }\n      />\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport Box from '../Box';\nimport { NotificationContext } from '../../context/notification-context';\nimport AuthService from '../../util/auth';\n\nconst Signup = () => {\n  const [notification, setNotification] = useContext(NotificationContext);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [hasSignup, setHasSignup] = useState(false);\n\n  const signup = (e) => {\n    e.preventDefault();\n    AuthService.signup(username, email, password, ['user'])\n      .then(() => {\n        setHasSignup(true);\n      })\n      .catch((error) => {\n        setNotification({\n          status: error.name,\n          content: error.message,\n        });\n        setTimeout(() => {\n          setNotification({\n            status: null,\n            content: null,\n          });\n        }, 3000);\n      });\n  };\n  const handleNameChange = (e) => {\n    setUsername(e.target.value);\n  };\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  if (hasSignup) return <Redirect to=\"login\" />;\n\n  return (\n    <Box\n    notification={notification}\n      title=\"Sign Up\"\n      content={\n        <Form>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Normal text\"\n              onChange={handleNameChange}\n              value={username}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleEmailChange}\n              value={email}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={handlePasswordChange}\n              value={password}\n            />\n          </Form.Group>\n        </Form>\n      }\n      control={\n        <Button onClick={signup} variant=\"primary\" type=\"submit\">\n          Sign Up\n        </Button>\n      }\n    />\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport AuthService from '../../util/auth';\n\nimport { Person, PersonPlus, FilePlus } from 'react-bootstrap-icons';\nimport LinkWithIcon from '../LinkWithIcon';\nimport styled from '@emotion/styled';\nimport { Title } from '../../components';\n\nconst HomeStyled = styled('div')`\n  display: flex;\n  background: radial-gradient(circle, rgba(238,238,238,1) 0%, rgba(255,255,255,1) 100%);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`\n\nconst Home = () => (\n    <HomeStyled>\n      <Title>Fresh Talk</Title>\n      <div className=\"chat-home__controls\">\n        <LinkWithIcon primary width=\"120px\" to=\"/signup\" icon={<FilePlus size=\"24\" />} >Sign up</LinkWithIcon>\n        {AuthService.getCurrentUser() ? (\n          <LinkWithIcon primary width=\"120px\" to=\"/join\" icon={<PersonPlus size=\"24\" />} >Join</LinkWithIcon>\n        ) : (\n          <LinkWithIcon primary width=\"120px\" to=\"/login\" icon={<Person size=\"24\" />} >Login</LinkWithIcon>\n        )}\n      </div>\n    </HomeStyled>\n);\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationContext } from '../../context/notification-context';\nimport './index.scss';\n\nconst Head = ({ children }) => {\n  const [notification] = useContext(NotificationContext);\n  return (\n    <section className=\"chat__head\">\n      <div\n        className={`chat__notification chat__notification${\n          notification.status === 'Error' ? '--active' : ''\n        }`}\n      >\n        {notification.content}\n      </div>\n      <div className=\"chat__head-burgur\">{children}</div>\n    </section>\n  );\n};\n\nHead.propTypes = {\n  children: PropTypes.any,\n}\n\nexport default Head;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthService from '../../util/auth';\n\nconst PrivateRoute = ({ component: Component, location, ...rest }) => {\n  console.log(\"location\", location);\n  return (\n  <Route\n    {...rest}\n    render={(props) =>\n      AuthService.getCurrentUser() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: location },\n          }}\n        />\n      )\n    }\n  />\n)};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.Component,\n  location: PropTypes.string,\n}\n\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\nimport { BoxArrowLeft } from 'react-bootstrap-icons';\nimport './index.scss';\nimport AuthService from '../../util/auth';\n\n/**\n * withRouter will pass updated match, location,\n * and history props to the wrapped component whenever it renders.\n */\nconst AuthButton = withRouter(\n  ({ history }) =>\n    AuthService.getCurrentUser() && (\n      <BoxArrowLeft\n        size=\"30\"\n        color=\"#fff\"\n        onClick={() => {\n          AuthService.logout();\n          history.push('/');\n        }}\n      >\n        Sign out\n      </BoxArrowLeft>\n    )\n);\n\nexport default AuthButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst TitleStyled = styled('h1')`\n  font-weight: 200;\n  letter-spacing: 12px;\n`\nconst Title = ({ children }) => \n    (<TitleStyled>{children}</TitleStyled>);\n\n\nTitle.propTypes = {\n    children: PropTypes.element,\n}\n\nexport default Title;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { Global, css } from \"@emotion/react\";\nimport emotionNormalize from 'emotion-normalize';\nimport { NotificationContextProvider } from '../src/context/notification-context';\nimport {\n  Home,\n  Head,\n  Login,\n  Signup,\n  AuthButton,\n  Join,\n  Chat,\n  PrivateRoute,\n} from './components';\nimport './index.scss';\nimport {vars}  from \"./variables\";\n\nconst App = () => (\n  <Router>\n    <NotificationContextProvider>\n      <Global\n        styles={css`\n          ${emotionNormalize}\n          html,\n          body {\n            padding: 0;\n            margin: 0;\n            background: ${vars.bgGradient};\n            color: ${vars.ChatFontColor};\n            min-height: 100%;\n            //prevent pull-down-to-refresh of mobile chrome\n            overscroll-behavior-y: contain;\n          }\n        `}\n      />\n      <Head>\n        <AuthButton />\n      </Head>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/Signup\" component={Signup} />\n        <Route path=\"/login\" component={Login} />\n        <PrivateRoute path=\"/join\" component={Join} />\n        <PrivateRoute path=\"/chat\" component={Chat} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </NotificationContextProvider>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App.js';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}