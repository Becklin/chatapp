{"version":3,"sources":["components/IconButton/index.js","components/Input/index.js","components/InfoBar/index.js","components/Message/index.js","components/Messages/index.js","util/FileConverter.js","components/Chat/index.js","util/FileProcessor.js","components/Box/index.js","components/Join/index.js","util/auth.js","components/Login/index.js","components/Signup/index.js","components/Home/index.js","components/Head/index.js","components/PrivateRoute/index.js","components/AuthButton/index.js","App.js","index.js"],"names":["IconButton","onHandleClick","className","name","disabled","icon","iconName","htmlFor","type","id","accept","onChange","e","files","Array","from","target","formData","FormData","append","get","Input","message","setMessage","sendMessage","sendFile","uploadFile","console","log","placeholder","value","event","onKeyPress","key","size","onClick","color","React","memo","room","counts","to","Message","user","content","upload","address","percent","date","avatarSrc","isSentByCurrentUser","trimmedName","trim","toLowerCase","role","title","src","roundedCircle","ProgressBar","now","animated","renderProgress","moment","format","dangerouslySetInnerHTML","__html","width","controls","renderFile","ReactEmoji","emojify","messages","rest","map","dataURLtoFile","base64","config","callback","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","socket","FileProcessor","file","this","stream","ss","createStream","createBlobReadStream","pipe","emit","quality","convertToDataUrl","then","readerDataUrl","Promise","resolve","alert","data","reader","FileReader","readAsDataURL","onload","result","onloadend","Chat","search","useLocation","useState","setName","setRoom","setMessages","setCounts","ENDPOINT","useEffect","qs","parse","io","path","transports","secure","error","off","getMessage","element","on","amount","messageIndex","findIndex","addMessage","index","payload","updateMessage","users","preventDefault","process","minifiedFileProcessor","send","originalFileProcessor","Box","control","hasNotification","notificationContent","portalDom","node","document","getElementById","Toast","delay","autohide","Header","Body","defaultProps","setHasNotification","Join","avatar","setAvatar","Form","URL","createObjectURL","Group","controlId","Label","Control","Button","block","API_URL","username","password","axios","post","response","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","getItem","Login","props","redirectToReferrer","setRedirectToReferrer","setUsername","setPassword","hasError","setHasError","AuthService","login","catch","variant","Signup","setEmail","hasSignup","setHasSignup","roles","Home","getCurrentUser","Head","children","PrivateRoute","Component","component","render","pathname","state","location","AuthButton","withRouter","history","logout","push","App","exact","ReactDom","querySelector"],"mappings":"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","file":"static/js/main.b92bbd69.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\n//USER送發訊息的人，name該聊天室使用者名字\nconst IconButton = ({ onHandleClick, className, name, disabled, icon }) => {\n  const onChange = (e) => {\n    const files = Array.from(e.target.files);\n    let formData = new FormData();\n    formData.append(0, files[0]);\n    onHandleClick(formData.get(0));\n  };\n  const iconName = `icon-${name}`;\n  return (\n    <span className={`chat__icon ${className} ${disabled ? 'disabled' : ''}`}>\n      <label className=\"chat__label\" htmlFor={iconName}>\n        {icon && icon}\n      </label>\n      <input\n        className=\"hidden-input\"\n        type=\"file\"\n        name={iconName}\n        id={iconName}\n        accept=\"image/*,video/*,audio/*\"\n        onChange={onChange}\n      />\n    </span>\n  );\n};\n\nexport default IconButton;\n","import React from 'react';\n// import { Row, Col, Button } from 'react-bootstrap';\nimport { ChatTextFill, CloudUploadFill, Image } from 'react-bootstrap-icons';\nimport IconButton from '../IconButton';\nimport './index.scss';\n\nconst Input = ({\n  message = '',\n  setMessage,\n  sendMessage,\n  sendFile,\n  uploadFile,\n}) => {\n  const handleSendMessage = (event) => {\n    sendMessage(event);\n  };\n  console.log('信息', message);\n  return (\n    <form className=\"chat__form\">\n      <textarea\n        className=\"chat__message\"\n        placeholder=\"write some message...\"\n        value={message}\n        onChange={(event) => setMessage(event.target.value)}\n        onKeyPress={(event) =>\n          event.key === 'Enter' ? setMessage(event.target.value) : null\n        }\n      />\n      <div className=\"chat__controls\">\n        <IconButton\n          disabled={message}\n          className=\"chat__flex\"\n          type=\"file\"\n          onHandleClick={sendFile}\n          icon={<Image />}\n          name=\"files\"\n        />\n        <IconButton\n          disabled={message}\n          className=\"chat__flex\"\n          type=\"file\"\n          onHandleClick={uploadFile}\n          icon={<CloudUploadFill />}\n          name=\"upload\"\n        />\n        <ChatTextFill\n          className=\"chat__flex\"\n          size=\"32\"\n          onClick={message ? handleSendMessage : null}\n          color={message ? 'darkslategray' : '#e3e3e3'}\n        />\n      </div>\n    </form>\n  );\n};\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import { Row, Col } from 'react-bootstrap';\nimport { ArrowLeftCircle, PeopleFill } from 'react-bootstrap-icons';\nimport './index.scss';\n\nconst InfoBar = ({ room, counts }) => (\n  <div className=\"chat__infoBar\">\n    <div className=\"chat__room\">\n      <h3>{room}</h3>\n    </div>\n    <div className=\"chat__count\">\n      {counts} <PeopleFill color=\"#ffffff\" size={24} />\n    </div>\n    <div className=\"chat__back\">\n      <Link to=\"/\">\n        <ArrowLeftCircle color=\"white\" size={24} />\n      </Link>\n    </div>\n  </div>\n);\n\nexport default React.memo(InfoBar);\n","import React from 'react';\nimport { Image, ProgressBar } from 'react-bootstrap';\nimport { PersonCircle } from 'react-bootstrap-icons';\nimport ReactEmoji from 'react-emoji';\nimport moment from 'moment';\nimport './index.scss';\n\n//USER送發訊息的人，name該聊天室使用者名字\nconst Message = ({\n  message,\n  message: { user, content, upload, type, address, percent, date },\n  name,\n  avatarSrc,\n}) => {\n  // console.log('最後', user, content, message);\n  let isSentByCurrentUser = false;\n  const trimmedName = name.trim().toLowerCase();\n  if (trimmedName === user) isSentByCurrentUser = true;\n  const role = isSentByCurrentUser ? 'user' : 'friend';\n  const title = role === 'user' ? trimmedName : user;\n  const renderProgress = (percent) => {\n    if (percent > 0 && percent < 100)\n      return (\n        <>\n          loading...\n          <ProgressBar now={percent} animated />\n        </>\n      );\n  };\n\n  const renderFile = ({ address, type, upload }) => {\n    if (address) return <div dangerouslySetInnerHTML={{ __html: address }} />;\n    if (type && upload) {\n      switch (type) {\n        case 'video/mp4': {\n          return (\n            <video width=\"100%\" controls>\n              <source\n                src={`data:image/png;base64, ${upload}`}\n                type=\"video/mp4\"\n              />\n              <source\n                src={`data:image/png;base64, ${upload}`}\n                type=\"video/ogg\"\n              />\n              Your browser does not support the video tag.\n            </video>\n          );\n          break;\n        }\n        case 'image/*':\n          return (\n            <img\n              className=\"img-thumbnail img-fluid\"\n              src={`data:image/png;base64, ${upload}`}\n            />\n          );\n          break;\n        default:\n          return (\n            <img\n              className=\"img-thumbnail img-fluid\"\n              src={`data:image/png;base64, ${upload}`}\n            />\n          );\n      }\n    }\n  };\n\n  return (\n    <div className={`chat-message chat-message--${role}`}>\n      {role === 'friend' && (\n        <h4>\n          {avatarSrc ? (\n            <Image src={avatarSrc} roundedCircle />\n          ) : (\n            <PersonCircle size={24} />\n          )}\n          <span>{title}</span>\n        </h4>\n      )}\n      <div className=\"chat-message__body\">\n        {renderProgress(percent)}\n        <span className=\"chat-message__date\">{moment(date).format('LTS')}</span>\n        {renderFile({ address, percent, type, upload })}\n        {content && (\n          <p className=\"chat-message__body--text\">\n            {ReactEmoji.emojify(content)}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport Message from '../Message';\nimport './index.scss';\n\nconst Messages = ({ messages, name, ...rest }) => (\n  <ScrollToBottom className=\"chat__messages\">\n    {messages.map((message) => {\n      return (\n        <Message\n          key={`name-${message.id}`}\n          message={message}\n          name={name}\n          {...rest}\n        />\n      );\n    })}\n  </ScrollToBottom>\n);\n\nexport default React.memo(Messages);\n","export function dataURLtoFile(base64, config, callback) {\n  var arr = base64.split(','),\n    mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], config.name, { type: mime });\n}\n\nexport function minifiedDataURL(readerDataUrl, config, callback) {\n  return new Promise((resolve) => {\n    // let video = document.createElement('video');\n    // video.setAttribute('src', readerDataUrl);\n    let img = new Image();\n    // 要從這裡讀取到type\n    img.src = readerDataUrl;\n    img.onload = () => {\n      // var that = this;\n      // 預設按比例壓縮\n      let width = img.width,\n        height = img.height,\n        scale = width / height;\n      const resizedWidth = 400;\n      let resizedHeight = resizedWidth / scale;\n      let quality = 0.7; // 預設圖片質量為0.7\n      //生成canvas\n      // 關鍵字\n      let canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      // 建立屬性節點\n      const anw = document.createAttribute('width');\n      anw.nodeValue = resizedWidth;\n      const anh = document.createAttribute('height');\n      anh.nodeValue = resizedHeight;\n      canvas.setAttributeNode(anw);\n      canvas.setAttributeNode(anh);\n      ctx.drawImage(img, 0, 0, resizedWidth, resizedHeight);\n      // 影象質量\n      if (config.quality && config.quality <= 1 && config.quality > 0) {\n        quality = config.quality;\n      }\n      /*\n          我們只需要把<img>獲取到的圖片放到<canvas>裡再通過.toDataURL()方法轉化下，\n          就可以得到以 base64 編碼的 dataURL。來看這個方法的語法： \n          */\n      var base64 = canvas.toDataURL('image/jpeg', 'image/webp', quality);\n      const newFile = dataURLtoFile(base64, config, callback);\n      resolve(newFile);\n    };\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport qs from 'query-string';\nimport io from 'socket.io-client';\n// import { Container } from 'react-bootstrap';\nimport Input from '../Input';\nimport InfoBar from '../InfoBar';\nimport Messages from '../Messages';\nimport FileProcessor from '../../util/FileProcessor';\n\nlet socket;\n\nconst Chat = () => {\n  let { search } = useLocation();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [counts, setCounts] = useState(0);\n\n  let ENDPOINT = 'localhost:5000';\n  if (process.env.NODE_ENV === 'production') {\n    ENDPOINT = 'https://freshtalk.herokuapp.com';\n  }\n  console.log(ENDPOINT);\n  useEffect(() => {\n    const { name, room } = qs.parse(search);\n    socket = io(ENDPOINT, {\n      path: '/socket.io',\n      transports: ['websocket'],\n      secure: true,\n    });\n    setName(name);\n    setRoom(room);\n\n    socket.emit('join', { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, search]);\n\n  useEffect(() => {\n    const getMessage = (element, id) => element.id === id;\n    const addMessage = ({ messages, id, upload = '', user, type, percent }) => {\n      return [\n        ...messages,\n        {\n          id,\n          upload,\n          user,\n          type,\n          percent,\n        },\n      ];\n    };\n    const updateMessage = (index, messages, payload) => {\n      messages[index] = {\n        ...messages[index],\n        ...payload,\n      };\n      return [...messages];\n    };\n    socket.on('message', (message) =>\n      setMessages((messages) => {\n        return [...messages, message];\n      })\n    );\n    socket.on('percent', (amount, { id, user, type }) => {\n      setMessages((messages) => {\n        const messageIndex = messages.findIndex((message) =>\n          getMessage(message, id)\n        );\n        if (messageIndex < 0) {\n          const config = {\n            messages,\n            id,\n            percent: amount,\n            user,\n            type,\n          };\n          return addMessage(config);\n        } else {\n          messages[messageIndex].percent = amount;\n          return [...messages];\n        }\n      });\n    });\n    socket.on('file', ({ user, upload, type, id }) => {\n      if (upload) {\n        setMessages((messages) => {\n          const messageIndex = messages.findIndex((message) =>\n            getMessage(message, id)\n          );\n          const payload = {\n            id,\n            user,\n            upload,\n            type,\n          };\n          return updateMessage(messageIndex, messages, payload);\n        });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on('roomData', ({ users }) => {\n      setCounts(users.length);\n    });\n  }, [counts]);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  const sendFile = (file) => {\n    /* build => 非同步promise處裡檔案 */\n    FileProcessor.process(file, socket).then((minifiedFileProcessor) => {\n      minifiedFileProcessor.send();\n    });\n  };\n\n  const uploadFile = (file) => {\n    FileProcessor.process(file, socket).then((originalFileProcessor) =>\n      originalFileProcessor.upload()\n    );\n  };\n\n  return (\n    <>\n      <InfoBar room={room} counts={counts} />\n      <Messages messages={messages} name={name} />\n      <Input\n        message={message}\n        setMessage={setMessage}\n        sendMessage={sendMessage}\n        sendFile={sendFile}\n        uploadFile={uploadFile}\n      />\n    </>\n  );\n};\n\nexport default Chat;\n","import ss from 'socket.io-stream';\nimport { dataURLtoFile } from './FileConverter';\n\nclass FileProcessor {\n  constructor(file, socket, callback) {\n    console.log('檔案', file);\n\n    this.socket = socket;\n    this.file = file;\n    this.name = file.name;\n  }\n  static process(file, socket) {\n    const config = {\n      name: file.name,\n      quality: 0.6,\n      type: file.type,\n    };\n    return convertToDataUrl(file, config)\n      .then(({ readerDataUrl, config, callback }) => {\n        this.base64 = readerDataUrl;\n        console.log('轉換成convertToDataUrl');\n        switch (config.type) {\n          // case 'image/jpeg': {\n          //   return minifiedDataURL(readerDataUrl, config, callback);\n          // }\n          case 'image/jpeg':\n          case 'video/mp4': {\n            return new Promise((resolve) => {\n              const newFile = dataURLtoFile(readerDataUrl, config, callback);\n              resolve(newFile);\n            });\n          }\n          default: {\n            alert('the type is not supprted');\n          }\n        }\n      })\n      .then((data) => {\n        this.data = data;\n        return new FileProcessor(this.data, socket);\n      });\n  }\n  send() {\n    console.log('送出', this, this.file.size);\n\n    const stream = ss.createStream();\n    const blobStream = ss.createBlobReadStream(this.file); //for browser use, 本來寫法是什麼\n    blobStream.pipe(stream);\n\n    ss(this.socket).emit('sendFile', stream, {\n      name: this.file.name,\n      type: this.file.type,\n      size: this.file.size,\n    });\n    console.log('this.file', this.file);\n    // const totalSize = this.file.size;\n    // let size = 0;\n    // blobStream.on('data', function (chunk) {\n    //   size += chunk.length;\n    //   console.log('totalSize', totalSize);\n    //   console.log(Math.floor((size / totalSize) * 100) + '%');\n    // });\n    // console.log('完成Blob', Date());\n  }\n\n  upload() {\n    const stream = ss.createStream();\n    ss(this.socket).emit('uploadFile', stream, {\n      name: this.file.name,\n      type: this.file.type,\n      size: this.file.size,\n    });\n    const blobStream = ss.createBlobReadStream(this.file); //for browser use, 本來寫法是什麼\n    // let size = 0;\n    // blobStream.on('data', function(chunk) {\n    //   size += chunk.length;\n    //   console.log(Math.floor((size / file.size) * 100) + '%');\n    // });\n    blobStream.pipe(stream);\n  }\n}\n\nconst convertToDataUrl = (file, config, callback) => {\n  return new Promise((resolve) => {\n    // 王牌文件 https://kknews.cc/zh-tw/code/e6p2ygq.html\n    // 神文 https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/227679/\n    /* 使用FileReader對象分三步走： 一 創建FileReader實例 */\n    var reader = new FileReader();\n    /* 開始讀取指定的Blob物件或File物件中的內容. 當讀取操作完成時,readyState屬性的值會成為DONE,\n    如果設定了onloadend事件處理程式,則呼叫之.\n    同時,result屬性中將包含一個data: URL格式的字串以表示所讀取檔案的內容.\n  */\n\n    /* 讀取Blob或者File對象的數據內容 */\n    reader.readAsDataURL(file); // 讀取文件內容，結果用data:url的字符串形式表示\n\n    // reader.onloadstart = function() {\n    //   console.log('加載已經開始');\n    // };\n    // reader.onprogress = function(what) {\n    //   console.log('啥', what); //注意必包\n    // };\n    /** 設置回調函數，這裡以讀取成功的回調函數為例： */\n    reader.onload = function () {\n      const readerDataUrl = this.result;\n      console.log('加載開始');\n\n      resolve({ readerDataUrl, config, callback });\n    };\n    reader.onloadend = function () {\n      console.log('加載已經結束');\n    };\n  });\n};\n\nexport default FileProcessor;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { Toast } from 'react-bootstrap';\nimport { Portal } from 'react-portal';\nimport './index.scss';\n// import useMediaQuery from '../../util/useMediaQuery';\n\nconst Box = ({\n  title,\n  content,\n  control,\n  // setHasNotification,\n  hasNotification,\n  notificationContent,\n}) => {\n  // const mediaQuery = useMediaQuery();\n  const portalDom = (\n    <Portal node={document && document.getElementById('portal')}>\n      <Toast delay={3000} autohide>\n        <Toast.Header>\n          <strong className=\"mr-auto\">FAILURE</strong>\n        </Toast.Header>\n        <Toast.Body>{notificationContent}</Toast.Body>\n      </Toast>\n    </Portal>\n  );\n  return (\n    <div className=\"chat__box\">\n      <h1>{title}</h1>\n      {content}\n      <div>{control}</div>\n      {hasNotification && portalDom}\n    </div>\n  );\n};\n\nBox.defaultProps = {\n  setHasNotification: () => {},\n  hasNotification: false,\n};\n\nexport default Box;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '../Box';\nimport { Button, Form } from 'react-bootstrap';\nimport './index.scss';\n\nconst Join = () => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [avatar, setAvatar] = useState();\n  const handleChange = (event) => {\n    setAvatar(URL.createObjectURL(event.target.files[0]));\n  };\n  return (\n    <Box\n      title=\"Join\"\n      content={\n        <Form>\n          <input type=\"file\" onChange={handleChange} />\n          <img width=\"50px\" src={avatar} />\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => setName(e.target.value)}\n            />\n            <Form.Label>Room</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Room\"\n              onChange={(e) => setRoom(e.target.value)}\n            />\n          </Form.Group>\n        </Form>\n      }\n      control={\n        <Link\n          onClick={(event) => (!name || !room ? event.preventDefault() : null)}\n          to={`/chat?name=${name}&room=${room}`}\n        >\n          <Button block type=\"submit\">\n            Join In\n          </Button>\n        </Link>\n      }\n    />\n  );\n};\n\nexport default Join;\n","import axios from 'axios';\n\nconst API_URL = 'https://freshtalk.herokuapp.com/api/auth/';\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + 'signin', {\n        username,\n        password,\n      })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem('user', JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  signup(username, email, password) {\n    return axios.post(API_URL + 'signup', {\n      username,\n      email,\n      password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\n\nimport Box from '../Box';\nimport AuthService from '../../util/auth';\nimport './index.scss';\n\nconst Login = (props) => {\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [hasError, setHasError] = useState(false);\n\n  const login = (e) => {\n    e.preventDefault();\n    AuthService.login(username, password)\n      .then((response) => {\n        // 以驗證mongodb data以及設定localstorage\n        console.log('資料', response);\n        setRedirectToReferrer(true);\n      })\n      .catch((error) => {\n        console.log('catch', error);\n        setHasError(true);\n      });\n  };\n  // const { from } = props.location.state || { from: { pathname: '/' } };\n  if (redirectToReferrer === true) {\n    return <Redirect to=\"join\" />;\n  }\n  const handleNameChange = (e) => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  return (\n    <>\n      <Box\n        title=\"Login\"\n        content={\n          <Form>\n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={handleNameChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={handlePasswordChange}\n              />\n            </Form.Group>\n          </Form>\n        }\n        control={\n          <Button onClick={login} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        }\n        // setHasNotification={setHasError}\n        hasNotification={hasError}\n        notificationContent=\"Oops, something went wrong!\"\n      />\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport Box from '../Box';\nimport axios from 'axios';\nimport './index.scss';\n\nconst Signup = (props) => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [hasSignup, setHasSignup] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const signup = (e) => {\n    e.preventDefault();\n    axios\n      .post('/api/auth/signup', {\n        username,\n        email,\n        password,\n        roles: ['user'],\n      })\n      .then((response) => {\n        setHasSignup(true);\n      })\n      .catch((error) => {\n        console.log('catch', error);\n        setHasError(true);\n      });\n  };\n  const handleNameChange = (e) => {\n    setUsername(e.target.value);\n  };\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  if (hasSignup) return <Redirect to=\"login\" />;\n  console.log('process', process.env);\n  return (\n    <Box\n      title=\"Sign Up\"\n      content={\n        <Form>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Normal text\"\n              onChange={handleNameChange}\n              value={username}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleEmailChange}\n              value={email}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={handlePasswordChange}\n              value={password}\n            />\n          </Form.Group>\n        </Form>\n      }\n      control={\n        <Button onClick={signup} variant=\"primary\" type=\"submit\">\n          Sign Up\n        </Button>\n      }\n      setHasNotification={setHasError}\n      hasNotification={hasError}\n      notificationContent=\"Oops, something went wrong!\"\n    />\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../util/auth';\nimport './index.scss';\n\nconst Home = () => (\n  <div className=\"chat-home\">\n    <h1>Fresh Talk</h1>\n    <div className=\"chat-home__controls\">\n      <Link to=\"/signup\">Sign up</Link>\n      {AuthService.getCurrentUser() ? (\n        <Link to=\"/join\">Join</Link>\n      ) : (\n        <Link to=\"/login\">Login</Link>\n      )}\n    </div>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n// import { Link } from 'react-router-dom';\n// import { Jumbotron } from 'react-bootstrap';\n// import { ArrowLeftCircle, PeopleFill } from 'react-bootstrap-icons';\nimport './index.scss';\n\nconst Head = ({ children }) => (\n  <section className=\"chat__head\">{children}</section>\n);\n\nexport default Head;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthService from '../../util/auth';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      AuthService.getCurrentUser() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\nimport { BoxArrowLeft } from 'react-bootstrap-icons';\nimport './index.scss';\nimport AuthService from '../../util/auth';\n\n/**\n * withRouter will pass updated match, location,\n * and history props to the wrapped component whenever it renders.\n */\nconst AuthButton = withRouter(\n  ({ history }) =>\n    AuthService.getCurrentUser() && (\n      <BoxArrowLeft\n        size=\"30\"\n        color=\"#fff\"\n        onClick={() => {\n          AuthService.logout();\n          history.push('/');\n        }}\n      >\n        Sign out\n      </BoxArrowLeft>\n    )\n);\n\nexport default AuthButton;\n","import React from 'react';\n// import { Toast } from 'react-bootstrap';\n\nimport {\n  BrowserRouter as Router,\n  // Link,\n  Route,\n  Redirect,\n  Switch,\n  // withRouter,\n} from 'react-router-dom';\n\nimport {\n  Home,\n  Head,\n  Login,\n  Signup,\n  AuthButton,\n  Join,\n  Chat,\n  PrivateRoute,\n} from './components';\nimport './index.scss';\n// const NotFound = () => (\n//   <div>\n//     <p>The page does not exist</p>\n//   </div>\n// );\nconst App = () => (\n  <Router>\n    <Head>\n      <AuthButton />\n    </Head>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/Signup\" component={Signup} />\n      <Route path=\"/login\" component={Login} />\n      <PrivateRoute path=\"/join\" component={Join} />\n      <PrivateRoute path=\"/chat\" component={Chat} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n    <div id=\"portal\"></div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App.js';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}