{"version":3,"sources":["components/Join/index.js","components/Home/index.js","util/FileConverter.js","components/Chat/index.js","util/FileProcessor.js","util/auth.js","components/LinkWithIcon/index.js","components/Box/index.js","context/notification-context.js","variables.js","App.js","index.js","components/Head/index.js","components/AuthButton/index.js","components/Title/index.js","components/IconButton/index.js","components/Input/index.js","components/InfoBar/index.js","components/Messages/index.js","components/Message/index.js"],"names":["Join","useState","name","setName","room","setRoom","isComplete","title","content","Group","controlId","Label","Control","type","placeholder","onChange","e","target","value","control","primary","disabled","width","to","HomeStyled","Home","className","AuthService","getCurrentUser","icon","size","dataURLtoFile","base64","config","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","socket","FileProcessor","file","this","stream","ss","createStream","createBlobReadStream","pipe","emit","quality","convertToDataUrl","then","readerDataUrl","callback","Promise","resolve","alert","data","a","addImageProcess","reject","reader","FileReader","readAsDataURL","onload","result","onerror","onloadend","console","log","Chat","search","useLocation","message","setMessage","messages","setMessages","counts","setCounts","ENDPOINT","process","useEffect","qs","parse","io","path","transports","secure","error","off","getMessage","element","id","on","amount","user","messageIndex","findIndex","upload","percent","addMessage","index","payload","updateMessage","users","InfoBar","Messages","Input","sendMessage","event","preventDefault","sendFile","minifiedFileProcessor","send","uploadFile","originalFileProcessor","API_URL","username","password","axios","post","response","accessToken","localStorage","setItem","JSON","stringify","catch","err","removeItem","email","getItem","primaryStyle","StyledLink","Link","props","LinkWithIcon","children","toString","defaultProps","BoxStyle","ControlStyled","Box","notification","NotificationContext","createContext","NotificationContextProvider","setNotification","Provider","vars","main","BtnBgColor","BorderDecoColor","MainFontColor","ChatFontColor","ChatRoomBfColor","bgGradient","lazy","App","styles","css","emotionNormalize","fallback","exact","component","from","ReactDom","render","document","querySelector","Head","useContext","status","AuthButton","withRouter","history","color","onClick","logout","push","TitleStyled","Title","IconButton","onHandleClick","iconName","htmlFor","accept","files","Array","formData","FormData","append","get","onKeyPress","key","InfoBarStyled","React","memo","rest","map","Message","avatarSrc","address","date","isSentByCurrentUser","trimmedName","trim","toLowerCase","role","src","roundedCircle","now","animated","renderProgress","moment","format","dangerouslySetInnerHTML","__html","controls","renderFile","ReactEmoji","emojify"],"mappings":"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","file":"static/js/main.e85f3ac7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Box from '../Box';\nimport { Form } from 'react-bootstrap';\nimport LinkWithIcon from '../LinkWithIcon';\n\nimport './index.scss';\n\nconst Join = () => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const isComplete = name && room;\n\n  return (\n    <Box\n      title=\"Join\"\n      content={\n        <Form>\n          {/* <FileInputStyled type=\"file\" onChange={handleChange} />\n          <img width=\"50px\" src={avatar} /> */}\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => setName(e.target.value)}\n            />\n            <Form.Label>Room</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Room\"\n              onChange={(e) => setRoom(e.target.value)}\n            />\n          </Form.Group>\n        </Form>\n      }\n      control={\n        <LinkWithIcon\n          primary\n          disabled={isComplete}\n          width=\"90%\"\n          to={`/chat?name=${name}&room=${room}`}\n        >\n          Join In\n        </LinkWithIcon>\n      }\n    />\n  );\n};\n\nexport default Join;\n","import React from 'react';\nimport AuthService from '../../util/auth';\n\nimport { Person, PersonPlus } from 'react-bootstrap-icons';\nimport LinkWithIcon from '../LinkWithIcon';\nimport styled from '@emotion/styled';\nimport { Title } from '../../components';\n\nconst HomeStyled = styled('div')`\n  display: flex;\n  background: radial-gradient(\n    circle,\n    rgba(238, 238, 238, 1) 0%,\n    rgba(255, 255, 255, 1) 100%\n  );\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Home = () => (\n  <HomeStyled>\n    <Title>Fresh Talk</Title>\n    <div className=\"chat-home__controls\">\n      {/* <LinkWithIcon primary width=\"120px\" to=\"/signup\" icon={<FilePlus size=\"24\" />} >Sign up</LinkWithIcon> */}\n      {AuthService.getCurrentUser() ? (\n        <LinkWithIcon\n          primary\n          width=\"120px\"\n          to=\"/join\"\n          icon={<PersonPlus size=\"24\" />}\n        >\n          Join\n        </LinkWithIcon>\n      ) : (\n        <LinkWithIcon\n          primary\n          width=\"120px\"\n          to=\"/login\"\n          icon={<Person size=\"24\" />}\n        >\n          Login\n        </LinkWithIcon>\n      )}\n    </div>\n  </HomeStyled>\n);\n\nexport default Home;\n","export function dataURLtoFile(base64, config) {\n  var arr = base64.split(','),\n    mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], config.name, { type: mime });\n}\n\nexport function minifiedDataURL(readerDataUrl, config, callback) {\n  return new Promise((resolve) => {\n    // let video = document.createElement('video');\n    // video.setAttribute('src', readerDataUrl);\n    let img = new Image();\n    // 要從這裡讀取到type\n    img.src = readerDataUrl;\n    img.onload = () => {\n      // var that = this;\n      // 預設按比例壓縮\n      let width = img.width,\n        height = img.height,\n        scale = width / height;\n      const resizedWidth = 400;\n      let resizedHeight = resizedWidth / scale;\n      let quality = 0.7; // 預設圖片質量為0.7\n      //生成canvas\n      // 關鍵字\n      let canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      // 建立屬性節點\n      const anw = document.createAttribute('width');\n      anw.nodeValue = resizedWidth;\n      const anh = document.createAttribute('height');\n      anh.nodeValue = resizedHeight;\n      canvas.setAttributeNode(anw);\n      canvas.setAttributeNode(anh);\n      ctx.drawImage(img, 0, 0, resizedWidth, resizedHeight);\n      // 影象質量\n      if (config.quality && config.quality <= 1 && config.quality > 0) {\n        quality = config.quality;\n      }\n      /*\n          我們只需要把<img>獲取到的圖片放到<canvas>裡再通過.toDataURL()方法轉化下，\n          就可以得到以 base64 編碼的 dataURL。來看這個方法的語法： \n          */\n      var base64 = canvas.toDataURL('image/jpeg', 'image/webp', quality);\n      const newFile = dataURLtoFile(base64, config, callback);\n      resolve(newFile);\n    };\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport qs from 'query-string';\nimport io from 'socket.io-client';\n// import { Container } from 'react-bootstrap';\nimport Input from '../Input';\nimport InfoBar from '../InfoBar';\nimport Messages from '../Messages';\nimport FileProcessor from '../../util/FileProcessor';\n\nlet socket;\n\nconst Chat = () => {\n  let { search } = useLocation();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [counts, setCounts] = useState(0);\n\n  let ENDPOINT = 'localhost:5000';\n  if (process.env.NODE_ENV === 'production') {\n    ENDPOINT = 'https://dailytalk.herokuapp.com';\n  }\n  console.log('process.env.NODE_ENV', process.env.NODE_ENV);\n  if (process.env.NODE_ENV === 'development') {\n    console.log('development');\n  }\n  useEffect(() => {\n    const { name, room } = qs.parse(search);\n    socket = io(ENDPOINT, {\n      path: '/socket.io',\n      transports: ['websocket'],\n      secure: true,\n    });\n    setName(name);\n    setRoom(room);\n\n    socket.emit('join', { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, search]);\n\n  useEffect(() => {\n    const getMessage = (element, id) => element.id === id;\n    const addMessage = ({ messages, id, upload = '', user, type, percent }) => {\n      return [\n        ...messages,\n        {\n          id,\n          upload,\n          user,\n          type,\n          percent,\n        },\n      ];\n    };\n    const updateMessage = (index, messages, payload) => {\n      messages[index] = {\n        ...messages[index],\n        ...payload,\n      };\n      return [...messages];\n    };\n    socket.on('message', (message) =>\n      setMessages((messages) => {\n        return [...messages, message];\n      })\n    );\n    socket.on('percent', (amount, { id, user, type }) => {\n      setMessages((messages) => {\n        const messageIndex = messages.findIndex((message) =>\n          getMessage(message, id)\n        );\n        if (messageIndex < 0) {\n          const config = {\n            messages,\n            id,\n            percent: amount,\n            user,\n            type,\n          };\n          return addMessage(config);\n        } else {\n          messages[messageIndex].percent = amount;\n          return [...messages];\n        }\n      });\n    });\n    socket.on('file', ({ user, upload, type, id }) => {\n      if (upload) {\n        setMessages((messages) => {\n          const messageIndex = messages.findIndex((message) =>\n            getMessage(message, id)\n          );\n          const payload = {\n            id,\n            user,\n            upload,\n            type,\n          };\n          return updateMessage(messageIndex, messages, payload);\n        });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on('roomData', ({ users }) => {\n      setCounts(users.length);\n    });\n  }, [counts]);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    console.log(message);\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  const sendFile = (file) => {\n    /* build => 非同步promise處裡檔案 */\n    FileProcessor.process(file, socket).then((minifiedFileProcessor) => {\n      minifiedFileProcessor.send();\n    });\n  };\n\n  const uploadFile = (file) => {\n    FileProcessor.process(file, socket).then((originalFileProcessor) =>\n      originalFileProcessor.upload()\n    );\n  };\n\n  return (\n    <>\n      <InfoBar room={room} counts={counts} />\n      <Messages messages={messages} name={name} />\n      <Input\n        message={message}\n        setMessage={setMessage}\n        sendMessage={sendMessage}\n        sendFile={sendFile}\n        uploadFile={uploadFile}\n      />\n    </>\n  );\n};\n\nexport default Chat;\n","import ss from 'socket.io-stream';\nimport { dataURLtoFile } from './FileConverter';\n\nclass FileProcessor {\n  constructor(file, socket) {\n    this.socket = socket;\n    this.file = file;\n    this.name = file.name;\n  }\n  static process(file, socket) {\n    const config = {\n      name: file.name,\n      quality: 0.6,\n      type: file.type\n    };\n    return convertToDataUrl(file, config)\n      .then(({ readerDataUrl, config, callback }) => {\n        this.base64 = readerDataUrl;\n        switch (config.type) {\n          // case 'image/jpeg': {\n          //   return minifiedDataURL(readerDataUrl, config, callback);\n          // }\n          case 'image/jpeg':\n          case 'video/mp4': {\n            return new Promise(resolve => {\n              const newFile = dataURLtoFile(readerDataUrl, config, callback);\n              resolve(newFile);\n            });\n          }\n          default: {\n            alert('the type is not supprted');\n          }\n        }\n      })\n      .then(data => {\n        this.data = data;\n        return new FileProcessor(this.data, socket);\n      });\n  }\n  send() {\n    const stream = ss.createStream();\n    const blobStream = ss.createBlobReadStream(this.file); //for browser use, 本來寫法是什麼\n    blobStream.pipe(stream);\n\n    ss(this.socket).emit('sendFile', stream, {\n      name: this.file.name,\n      type: this.file.type,\n      size: this.file.size\n    });\n  }\n\n  upload() {\n    const stream = ss.createStream();\n    ss(this.socket).emit('uploadFile', stream, {\n      name: this.file.name,\n      type: this.file.type,\n      size: this.file.size\n    });\n    const blobStream = ss.createBlobReadStream(this.file); //for browser use, 本來寫法是什麼\n    blobStream.pipe(stream);\n  }\n}\nconst convertToDataUrl = async (file, config, callback) => {\n  // 王牌文件 https://kknews.cc/zh-tw/code/e6p2ygq.html\n  // 神文 https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/227679/\n  /* 使用FileReader對象分三步走： 一 創建FileReader實例 */\n  // var reader = new FileReader();\n  /* 開始讀取指定的Blob物件或File物件中的內容. 當讀取操作完成時,readyState屬性的值會成為DONE,\n    如果設定了onloadend事件處理程式,則呼叫之.\n    同時,result屬性中將包含一個data: URL格式的字串以表示所讀取檔案的內容.\n  */\n\n  /* 讀取Blob或者File對象的數據內容 */\n  // reader.readAsDataURL(file); // 讀取文件內容，結果用data:url的字符串形式表示\n\n  // reader.onloadstart = function() {\n  //   console.log('加載已經開始');\n  // };\n  // reader.onprogress = function(what) {\n  //   console.log('啥', what); //注意必包\n  // };\n  /** 設置回調函數，這裡以讀取成功的回調函數為例： */\n  const addImageProcess = (file, config, callback) => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.readAsDataURL(file); // 讀取文件內容，結果用data:url的字符串形式表示\n      reader.onload = function() {\n        const readerDataUrl = this.result;\n        resolve({ readerDataUrl, config, callback });\n      };\n      reader.onerror = () => reject('加载失败');\n      reader.onloadend = function() {\n        console.log('加載已經結束');\n      };\n    });\n  };\n  return await addImageProcess(file, config, callback);\n};\n\n// const convertToDataUrl2 = (file, config, callback) => {\n//   return new Promise(resolve => {\n//     // 王牌文件 https://kknews.cc/zh-tw/code/e6p2ygq.html\n//     // 神文 https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/227679/\n//     /* 使用FileReader對象分三步走： 一 創建FileReader實例 */\n//     var reader = new FileReader();\n//     /* 開始讀取指定的Blob物件或File物件中的內容. 當讀取操作完成時,readyState屬性的值會成為DONE,\n//     如果設定了onloadend事件處理程式,則呼叫之.\n//     同時,result屬性中將包含一個data: URL格式的字串以表示所讀取檔案的內容.\n//   */\n\n//     /* 讀取Blob或者File對象的數據內容 */\n//     reader.readAsDataURL(file); // 讀取文件內容，結果用data:url的字符串形式表示\n\n//     // reader.onloadstart = function() {\n//     //   console.log('加載已經開始');\n//     // };\n//     // reader.onprogress = function(what) {\n//     //   console.log('啥', what); //注意必包\n//     // };\n//     /** 設置回調函數，這裡以讀取成功的回調函數為例： */\n//     reader.onload = function() {\n//       const readerDataUrl = this.result;\n//       console.log('加載開始');\n\n//       resolve({ readerDataUrl, config, callback });\n//     };\n//     reader.onloadend = function() {\n//       console.log('加載已經結束');\n//     };\n//   });\n// };\n\nexport default FileProcessor;\n","import axios from 'axios';\n\nlet API_URL = '/api/auth/';\nif (process.env.NODE_ENV === 'production') {\n  API_URL = 'https://dailytalk.herokuapp.com/api/auth/';\n}\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + 'signin', {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem('user', JSON.stringify(response.data));\n        }\n        return response.data;\n      })\n      .catch((err) => {\n        console.log(\"login err\", err);\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  signup(username, email, password) {\n    return axios.post(API_URL + 'signup', {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    console.log(JSON.parse(localStorage.getItem('user')));\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst primaryStyle = () =>\n  css`\n    padding: 16px;\n    background: #007bff;\n    border-radius: 5px;\n    margin: 8px;\n    color: #ffffff;\n    display: inline-block;\n  `\n\nconst StyledLink = styled(Link)`\n    &:focus, &:hover, &:visited, &:link, &:active {\n      text-decoration: none;\n      color: #2A3346,\n      display: flex;\n      justify-content: center;\n      ${props => props.primary && primaryStyle};\n      & > svg {\n        margin: 0 8px;\n      }\n  }\n`;\n\nconst LinkWithIcon = ({ to, icon, width, children, disabled, primary }) => \n    (<StyledLink width={width} to={to} disabled={disabled} primary={primary && primary.toString()}>{icon}{children}</StyledLink>);\n\nLinkWithIcon.defaultProps = {\n  icon: null,\n}\n\nLinkWithIcon.propTypes = {\n  to: PropTypes.string,\n  icon: PropTypes.element,\n  width: PropTypes.string,\n  children: PropTypes.string,\n  disabled: PropTypes.bool,\n  primary: PropTypes.bool,\n}\n\nexport default LinkWithIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { Title } from '../../components';\n// import { css } from '@emotion/react';\n\nconst BoxStyle = styled('div')`\n  width: 300px;\n  margin: 0;\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst ControlStyled = styled('div')`\n  margin: 12px 0px;\n`\n// const Child = styled('span')`\n//   color: blue;\n// `\n// const Button = styled.button`\n//   color: ${props =>\n//     props.primary ? 'hotpink' : 'turquoise'};\n//     ${Child} {\n//       color: yellow;\n//     }\n// `\n// const AnotherSpan = Button.withComponent('span');\n// const dynamicStyle = props =>\n//   css`\n//     color: ${props.color};\n//   `\n//   const Example = styled('span')`\n//   color: lightgreen;\n//   & > a {\n//     color: hotpink;\n//   }\n//`\n\n// const Container = styled.div`\n//   ${dynamicStyle};\n// `\nconst Box = ({ title, content, control, notification }) => {\n  return (\n    <BoxStyle\n    className=\"chat__box\"\n    >\n        {/* <Example>\n    This is <a>nested</a>.\n  </Example> */}\n      {/* <Button\n        as=\"a\"\n        href=\"https://github.com/emotion-js/emotion\"\n      >\n        Emotion on GitHub\n      </Button>\n      <Container color=\"lightgreen\">\n        This is lightgreen.\n      </Container>\n      <H1>febfhtjffnfyukfukyf</H1>\n      <Button primary>ddd<Child>child</Child></Button>\n      <AnotherSpan>heyhehyehy</AnotherSpan> */}\n      <div>{notification.content}</div>\n      <Title>{title}</Title>\n      {content}\n      <ControlStyled>{control}</ControlStyled>\n    </BoxStyle>\n  );\n};\n// const H1 = styled('h1')(() => ({\n//   color: 'yellow'\n// }))\n\nBox.defaultProps = {\n  notification: {\n    content: \"\",\n    type: null,\n  }\n};\n\nBox.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.func,\n  control: PropTypes.element,\n  notification: PropTypes.object,\n};\n\nexport default Box;\n","import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\n\n// Create Context Object\nexport const NotificationContext = createContext();\n\n// Create a provider for components to consume and subscribe to changes\nexport const NotificationContextProvider = ({children}) => {\n  const [notification, setNotification] = useState({});\n\n  return (\n    <NotificationContext.Provider value={[notification, setNotification]}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nNotificationContextProvider.propTypes = {\n  children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n  ]).isRequired\n};\n\n","export const vars = {\n    main: \"#3cb67f\",\n    BtnBgColor: \"#2F80EB\",\n    BorderDecoColor: \"#ECECEE\",\n    MainFontColor: \"#2A3346\",\n    ChatFontColor: \"#808187\",\n    ChatRoomBfColor: \"#F2F3F7\",\n    bgGradient: \"radial-gradient(circle, rgba(238,238,238,1) 0%, rgba(255,255,255,1) 100%)\",\n}\n","import React, { lazy, Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { Global, css } from '@emotion/react';\nimport emotionNormalize from 'emotion-normalize';\nimport { NotificationContextProvider } from '../src/context/notification-context';\nimport { Head, AuthButton } from './components';\nimport './index.scss';\nimport { vars } from './variables';\n\nconst Home = lazy(() => import('./components/Home'));\nconst Join = lazy(() => import('./components/Join'));\nconst Chat = lazy(() => import('./components/Chat'));\n\nconst App = () => (\n  <Router>\n    <NotificationContextProvider>\n      <Global\n        styles={css`\n          ${emotionNormalize}\n          html,\n          body {\n            padding: 0;\n            margin: 0;\n            background: ${vars.bgGradient};\n            color: ${vars.ChatFontColor};\n            min-height: 100%;\n            //prevent pull-down-to-refresh of mobile chrome\n            overscroll-behavior-y: contain;\n          }\n        `}\n      />\n      <Head>\n        <AuthButton />\n      </Head>\n      <Suspense fallback={() => <div>Loading...</div>}>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          {/* <Route path=\"/Signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} /> */}\n          {/* <PrivateRoute path=\"/join\" component={Join} />\n          <PrivateRoute path=\"/chat\" component={Chat} /> */}\n          <Route path=\"/join\" component={Join} />\n          <Route path=\"/chat\" component={Chat} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </Suspense>\n    </NotificationContextProvider>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App.js';\n\nReactDom.render(<App />, document.querySelector('#root'));\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationContext } from '../../context/notification-context';\nimport './index.scss';\n\nconst Head = ({ children }) => {\n  const [notification] = useContext(NotificationContext);\n  return (\n    <section className=\"chat__head\">\n      <div\n        className={`chat__notification chat__notification${\n          notification.status === 'Error' ? '--active' : ''\n        }`}\n      >\n        {notification.content}\n      </div>\n      <div className=\"chat__head-burgur\">{children}</div>\n    </section>\n  );\n};\n\nHead.propTypes = {\n  children: PropTypes.any,\n}\n\nexport default Head;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\nimport { BoxArrowLeft } from 'react-bootstrap-icons';\nimport './index.scss';\nimport AuthService from '../../util/auth';\n\n/**\n * withRouter will pass updated match, location,\n * and history props to the wrapped component whenever it renders.\n */\nconst AuthButton = withRouter(\n  ({ history }) =>\n    AuthService.getCurrentUser() && (\n      <BoxArrowLeft\n        size=\"30\"\n        color=\"#fff\"\n        onClick={() => {\n          AuthService.logout();\n          history.push('/');\n        }}\n      >\n        Sign out\n      </BoxArrowLeft>\n    )\n);\n\nexport default AuthButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst TitleStyled = styled('h1')`\n  font-weight: 200;\n  letter-spacing: 12px;\n`\nconst Title = ({ children }) => \n    (<TitleStyled>{children}</TitleStyled>);\n\n\nTitle.propTypes = {\n    children: PropTypes.element,\n}\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\n//USER送發訊息的人，name該聊天室使用者名字\nconst IconButton = ({ onHandleClick, className, name, disabled, icon }) => {\n  const onChange = (e) => {\n    const files = Array.from(e.target.files);\n    let formData = new FormData();\n    formData.append(0, files[0]);\n    onHandleClick(formData.get(0));\n  };\n  const iconName = `icon-${name}`;\n  return (\n    <span className={`chat__icon ${className} ${disabled ? 'disabled' : ''}`}>\n      <label className=\"chat__label\" htmlFor={iconName}>\n        {icon && icon}\n      </label>\n      <input\n        className=\"hidden-input\"\n        type=\"file\"\n        name={iconName}\n        id={iconName}\n        accept=\"image/*,video/*,audio/*\"\n        onChange={onChange}\n      />\n    </span>\n  );\n};\n\nIconButton.propTypes = {\n  onHandleClick: PropTypes.func,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n}\n\nexport default IconButton;\n","import React from 'react';\n// import { Row, Col, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ChatTextFill, CloudUploadFill, Image } from 'react-bootstrap-icons';\nimport IconButton from '../IconButton';\nimport './index.scss';\n\nconst Input = ({\n  message = '',\n  setMessage,\n  sendMessage,\n  sendFile,\n  uploadFile,\n}) => {\n  const handleSendMessage = (event) => {\n    sendMessage(event);\n  };\n  return (\n    <form className=\"chat__form\">\n      <textarea\n        className=\"chat__message\"\n        placeholder=\"write some message...\"\n        value={message}\n        onChange={(event) => setMessage(event.target.value)}\n        onKeyPress={(event) =>\n          event.key === 'Enter' ? setMessage(event.target.value) : null\n        }\n      />\n      <div className=\"chat__controls\">\n        <IconButton\n          disabled={message}\n          className=\"chat__flex\"\n          type=\"file\"\n          onHandleClick={sendFile}\n          icon={<Image />}\n          name=\"files\"\n        />\n        <IconButton\n          disabled={message}\n          className=\"chat__flex\"\n          type=\"file\"\n          onHandleClick={uploadFile}\n          icon={<CloudUploadFill />}\n          name=\"upload\"\n        />\n        <ChatTextFill\n          className=\"chat__flex\"\n          size=\"32\"\n          onClick={message ? handleSendMessage : null}\n          color={message ? 'darkslategray' : '#e3e3e3'}\n        />\n      </div>\n    </form>\n  );\n};\n\nInput.propTypes = {\n  message: PropTypes.string,\n  setMessage: PropTypes.func,\n  sendMessage: PropTypes.func,\n  sendFile: PropTypes.func,\n  uploadFile: PropTypes.func,\n}\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ArrowLeftCircle, PeopleFill } from 'react-bootstrap-icons';\nimport LinkWithIcon from '../LinkWithIcon';\nimport { vars }  from \"../../variables\";\nimport styled from \"@emotion/styled\";\n\nconst InfoBarStyled = styled('div')`\n      display: flex;\n      align-items: center;\n      padding: 0 50px 0 12px;\n      & .chat__room {\n        width: 100px;\n        flex: 5;\n        color: ${vars.MainFontColor};\n      }\n      & .chat__count {\n        width: 100px;\n        flex: 1;\n        color: ${vars.MainFontColor};\n      }\n      & .chat__back {\n        width: 100px;\n        flex: 1;\n      }\n`\n\nconst InfoBar = ({ room, counts }) => (\n  <InfoBarStyled>\n    <div className=\"chat__room\">\n      <h3>{room}</h3>\n    </div>\n    <div className=\"chat__count\">\n      {counts} <PeopleFill color={vars.MainFontColor} size={24} />\n    </div>\n    <div className=\"chat__back\">\n      <LinkWithIcon\n            to='/'\n            icon={<ArrowLeftCircle color={vars.MainFontColor} size={24} />}\n      />\n    </div>\n  </InfoBarStyled>\n);\n\nInfoBar.propTypes = {\n  room: PropTypes.string,\n  counts: PropTypes.number,\n}\n\nexport default React.memo(InfoBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport Message from '../Message';\nimport './index.scss';\n\nconst Messages = ({ messages, name, ...rest }) => (\n  <ScrollToBottom className=\"chat__messages\">\n    {messages.map((message) => {\n      return (\n        <Message\n          key={`name-${message.id}`}\n          message={message}\n          name={name}\n          {...rest}\n        />\n      );\n    })}\n  </ScrollToBottom>\n);\n\nMessages.propTypes = {\n  messages: PropTypes.any,\n  name: PropTypes.string,\n}\n\nexport default React.memo(Messages);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, ProgressBar } from 'react-bootstrap';\nimport { PersonCircle } from 'react-bootstrap-icons';\nimport ReactEmoji from 'react-emoji';\nimport moment from 'moment';\nimport './index.scss';\n\n//USER送發訊息的人，name該聊天室使用者名字\nconst Message = ({\n  message,\n  name,\n  avatarSrc,\n}) => {\n  const { user, content, upload, type, address, percent, date } = message;\n  let isSentByCurrentUser = false;\n  const trimmedName = name.trim().toLowerCase();\n  if (trimmedName === user) isSentByCurrentUser = true;\n  const role = isSentByCurrentUser ? 'user' : 'friend';\n  const title = role === 'user' ? trimmedName : user;\n  const renderProgress = (percent) => {\n    if (percent > 0 && percent < 100)\n      return (\n        <>\n          loading...\n          <ProgressBar now={percent} animated />\n        </>\n      );\n  };\n\n  const renderFile = ({ address, type, upload }) => {\n    if (address) return <div dangerouslySetInnerHTML={{ __html: address }} />;\n    if (type && upload) {\n      switch (type) {\n        case 'video/mp4': {\n          return (\n            <video width=\"100%\" controls>\n              <source\n                src={`data:image/png;base64, ${upload}`}\n                type=\"video/mp4\"\n              />\n              <source\n                src={`data:image/png;base64, ${upload}`}\n                type=\"video/ogg\"\n              />\n              Your browser does not support the video tag.\n            </video>\n          );\n        }\n        case 'image/*':\n          return (\n            <img\n              className=\"img-thumbnail img-fluid\"\n              src={`data:image/png;base64, ${upload}`}\n            />\n          );\n        default:\n          return (\n            <img\n              className=\"img-thumbnail img-fluid\"\n              src={`data:image/png;base64, ${upload}`}\n            />\n          );\n      }\n    }\n  };\n\n  return (\n    <div className={`chat-message chat-message--${role}`}>\n      {role === 'friend' && (\n        <h4>\n          {avatarSrc ? (\n            <Image src={avatarSrc} roundedCircle />\n          ) : (\n            <PersonCircle size={24} />\n          )}\n          <span>{title}</span>\n        </h4>\n      )}\n      <div className=\"chat-message__body\">\n        {renderProgress(percent)}\n        <span className=\"chat-message__date\">{moment(date).format('LTS')}</span>\n        {renderFile({ address, percent, type, upload })}\n        {content && (\n          <p className=\"chat-message__body--text\">\n            {ReactEmoji.emojify(content)}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.object,\n  counts: PropTypes.number,\n  name: PropTypes.string,\n  avatarSrc: PropTypes.string,\n}\n\nexport default Message;\n"],"sourceRoot":""}